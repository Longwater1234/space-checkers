// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base_payload.proto
// Protobuf C++ Version: 5.27.1
// clang-format off
#ifndef GOOGLE_PROTOBUF_INCLUDED_base_5fpayload_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_base_5fpayload_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_base_5fpayload_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_base_5fpayload_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_base_5fpayload_2eproto;
namespace chk {
namespace payload {
class BasePayload;
struct BasePayloadDefaultTypeInternal;
extern BasePayloadDefaultTypeInternal _BasePayload_default_instance_;
class ExitPayload;
struct ExitPayloadDefaultTypeInternal;
extern ExitPayloadDefaultTypeInternal _ExitPayload_default_instance_;
class MovePayload;
struct MovePayloadDefaultTypeInternal;
extern MovePayloadDefaultTypeInternal _MovePayload_default_instance_;
class MovePayload_DestCell;
struct MovePayload_DestCellDefaultTypeInternal;
extern MovePayload_DestCellDefaultTypeInternal _MovePayload_DestCell_default_instance_;
class StartPayload;
struct StartPayloadDefaultTypeInternal;
extern StartPayloadDefaultTypeInternal _StartPayload_default_instance_;
class WelcomePayload;
struct WelcomePayloadDefaultTypeInternal;
extern WelcomePayloadDefaultTypeInternal _WelcomePayload_default_instance_;
}  // namespace payload
}  // namespace chk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace chk {
namespace payload {
enum TeamColor : int {
  TEAM_UNSPECIFIED = 0,
  TEAM_RED = 1,
  TEAM_BLACK = 2,
  TeamColor_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TeamColor_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TeamColor_IsValid(int value);
extern const uint32_t TeamColor_internal_data_[];
constexpr TeamColor TeamColor_MIN = static_cast<TeamColor>(0);
constexpr TeamColor TeamColor_MAX = static_cast<TeamColor>(2);
constexpr int TeamColor_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TeamColor_descriptor();
template <typename T>
const std::string& TeamColor_Name(T value) {
  static_assert(std::is_same<T, TeamColor>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TeamColor_Name().");
  return TeamColor_Name(static_cast<TeamColor>(value));
}
template <>
inline const std::string& TeamColor_Name(TeamColor value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TeamColor_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TeamColor_Parse(absl::string_view name, TeamColor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeamColor>(
      TeamColor_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WelcomePayload final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chk.payload.WelcomePayload) */ {
 public:
  inline WelcomePayload() : WelcomePayload(nullptr) {}
  ~WelcomePayload() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WelcomePayload(
      ::google::protobuf::internal::ConstantInitialized);

  inline WelcomePayload(const WelcomePayload& from) : WelcomePayload(nullptr, from) {}
  inline WelcomePayload(WelcomePayload&& from) noexcept
      : WelcomePayload(nullptr, std::move(from)) {}
  inline WelcomePayload& operator=(const WelcomePayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline WelcomePayload& operator=(WelcomePayload&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WelcomePayload& default_instance() {
    return *internal_default_instance();
  }
  static inline const WelcomePayload* internal_default_instance() {
    return reinterpret_cast<const WelcomePayload*>(
        &_WelcomePayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(WelcomePayload& a, WelcomePayload& b) { a.Swap(&b); }
  inline void Swap(WelcomePayload* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WelcomePayload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WelcomePayload* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<WelcomePayload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WelcomePayload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WelcomePayload& from) { WelcomePayload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WelcomePayload* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chk.payload.WelcomePayload"; }

 protected:
  explicit WelcomePayload(::google::protobuf::Arena* arena);
  WelcomePayload(::google::protobuf::Arena* arena, const WelcomePayload& from);
  WelcomePayload(::google::protobuf::Arena* arena, WelcomePayload&& from) noexcept
      : WelcomePayload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMyTeamFieldNumber = 1,
  };
  // .chk.payload.TeamColor my_team = 1;
  void clear_my_team() ;
  ::chk::payload::TeamColor my_team() const;
  void set_my_team(::chk::payload::TeamColor value);

  private:
  ::chk::payload::TeamColor _internal_my_team() const;
  void _internal_set_my_team(::chk::payload::TeamColor value);

  public:
  // @@protoc_insertion_point(class_scope:chk.payload.WelcomePayload)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WelcomePayload_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WelcomePayload& from_msg);
    int my_team_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fpayload_2eproto;
};
// -------------------------------------------------------------------

class StartPayload final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chk.payload.StartPayload) */ {
 public:
  inline StartPayload() : StartPayload(nullptr) {}
  ~StartPayload() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartPayload(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartPayload(const StartPayload& from) : StartPayload(nullptr, from) {}
  inline StartPayload(StartPayload&& from) noexcept
      : StartPayload(nullptr, std::move(from)) {}
  inline StartPayload& operator=(const StartPayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartPayload& operator=(StartPayload&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartPayload& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartPayload* internal_default_instance() {
    return reinterpret_cast<const StartPayload*>(
        &_StartPayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StartPayload& a, StartPayload& b) { a.Swap(&b); }
  inline void Swap(StartPayload* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartPayload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartPayload* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StartPayload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartPayload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartPayload& from) { StartPayload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartPayload* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chk.payload.StartPayload"; }

 protected:
  explicit StartPayload(::google::protobuf::Arena* arena);
  StartPayload(::google::protobuf::Arena* arena, const StartPayload& from);
  StartPayload(::google::protobuf::Arena* arena, StartPayload&& from) noexcept
      : StartPayload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPiecesRedFieldNumber = 1,
    kPiecesBlackFieldNumber = 2,
  };
  // repeated int32 pieces_red = 1;
  int pieces_red_size() const;
  private:
  int _internal_pieces_red_size() const;

  public:
  void clear_pieces_red() ;
  ::int32_t pieces_red(int index) const;
  void set_pieces_red(int index, ::int32_t value);
  void add_pieces_red(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& pieces_red() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_pieces_red();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_pieces_red() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_pieces_red();

  public:
  // repeated int32 pieces_black = 2;
  int pieces_black_size() const;
  private:
  int _internal_pieces_black_size() const;

  public:
  void clear_pieces_black() ;
  ::int32_t pieces_black(int index) const;
  void set_pieces_black(int index, ::int32_t value);
  void add_pieces_black(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& pieces_black() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_pieces_black();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_pieces_black() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_pieces_black();

  public:
  // @@protoc_insertion_point(class_scope:chk.payload.StartPayload)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StartPayload_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartPayload& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> pieces_red_;
    mutable ::google::protobuf::internal::CachedSize _pieces_red_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> pieces_black_;
    mutable ::google::protobuf::internal::CachedSize _pieces_black_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fpayload_2eproto;
};
// -------------------------------------------------------------------

class MovePayload_DestCell final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chk.payload.MovePayload.DestCell) */ {
 public:
  inline MovePayload_DestCell() : MovePayload_DestCell(nullptr) {}
  ~MovePayload_DestCell() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovePayload_DestCell(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovePayload_DestCell(const MovePayload_DestCell& from) : MovePayload_DestCell(nullptr, from) {}
  inline MovePayload_DestCell(MovePayload_DestCell&& from) noexcept
      : MovePayload_DestCell(nullptr, std::move(from)) {}
  inline MovePayload_DestCell& operator=(const MovePayload_DestCell& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovePayload_DestCell& operator=(MovePayload_DestCell&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovePayload_DestCell& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovePayload_DestCell* internal_default_instance() {
    return reinterpret_cast<const MovePayload_DestCell*>(
        &_MovePayload_DestCell_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MovePayload_DestCell& a, MovePayload_DestCell& b) { a.Swap(&b); }
  inline void Swap(MovePayload_DestCell* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovePayload_DestCell* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovePayload_DestCell* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MovePayload_DestCell>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovePayload_DestCell& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovePayload_DestCell& from) { MovePayload_DestCell::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MovePayload_DestCell* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chk.payload.MovePayload.DestCell"; }

 protected:
  explicit MovePayload_DestCell(::google::protobuf::Arena* arena);
  MovePayload_DestCell(::google::protobuf::Arena* arena, const MovePayload_DestCell& from);
  MovePayload_DestCell(::google::protobuf::Arena* arena, MovePayload_DestCell&& from) noexcept
      : MovePayload_DestCell(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCellIndexFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // int32 cell_index = 1;
  void clear_cell_index() ;
  ::int32_t cell_index() const;
  void set_cell_index(::int32_t value);

  private:
  ::int32_t _internal_cell_index() const;
  void _internal_set_cell_index(::int32_t value);

  public:
  // float x = 2;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 3;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:chk.payload.MovePayload.DestCell)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MovePayload_DestCell_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovePayload_DestCell& from_msg);
    ::int32_t cell_index_;
    float x_;
    float y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fpayload_2eproto;
};
// -------------------------------------------------------------------

class ExitPayload final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chk.payload.ExitPayload) */ {
 public:
  inline ExitPayload() : ExitPayload(nullptr) {}
  ~ExitPayload() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExitPayload(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExitPayload(const ExitPayload& from) : ExitPayload(nullptr, from) {}
  inline ExitPayload(ExitPayload&& from) noexcept
      : ExitPayload(nullptr, std::move(from)) {}
  inline ExitPayload& operator=(const ExitPayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExitPayload& operator=(ExitPayload&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExitPayload& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExitPayload* internal_default_instance() {
    return reinterpret_cast<const ExitPayload*>(
        &_ExitPayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ExitPayload& a, ExitPayload& b) { a.Swap(&b); }
  inline void Swap(ExitPayload* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExitPayload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExitPayload* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExitPayload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExitPayload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExitPayload& from) { ExitPayload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExitPayload* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chk.payload.ExitPayload"; }

 protected:
  explicit ExitPayload(::google::protobuf::Arena* arena);
  ExitPayload(::google::protobuf::Arena* arena, const ExitPayload& from);
  ExitPayload(::google::protobuf::Arena* arena, ExitPayload&& from) noexcept
      : ExitPayload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromTeamFieldNumber = 1,
  };
  // .chk.payload.TeamColor from_team = 1;
  void clear_from_team() ;
  ::chk::payload::TeamColor from_team() const;
  void set_from_team(::chk::payload::TeamColor value);

  private:
  ::chk::payload::TeamColor _internal_from_team() const;
  void _internal_set_from_team(::chk::payload::TeamColor value);

  public:
  // @@protoc_insertion_point(class_scope:chk.payload.ExitPayload)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExitPayload_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExitPayload& from_msg);
    int from_team_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fpayload_2eproto;
};
// -------------------------------------------------------------------

class MovePayload final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chk.payload.MovePayload) */ {
 public:
  inline MovePayload() : MovePayload(nullptr) {}
  ~MovePayload() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovePayload(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovePayload(const MovePayload& from) : MovePayload(nullptr, from) {}
  inline MovePayload(MovePayload&& from) noexcept
      : MovePayload(nullptr, std::move(from)) {}
  inline MovePayload& operator=(const MovePayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovePayload& operator=(MovePayload&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovePayload& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovePayload* internal_default_instance() {
    return reinterpret_cast<const MovePayload*>(
        &_MovePayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MovePayload& a, MovePayload& b) { a.Swap(&b); }
  inline void Swap(MovePayload* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovePayload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovePayload* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MovePayload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovePayload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovePayload& from) { MovePayload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MovePayload* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chk.payload.MovePayload"; }

 protected:
  explicit MovePayload(::google::protobuf::Arena* arena);
  MovePayload(::google::protobuf::Arena* arena, const MovePayload& from);
  MovePayload(::google::protobuf::Arena* arena, MovePayload&& from) noexcept
      : MovePayload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DestCell = MovePayload_DestCell;

  // accessors -------------------------------------------------------
  enum : int {
    kDestCellFieldNumber = 4,
    kFromTeamFieldNumber = 1,
    kPieceIdFieldNumber = 2,
    kSourceCellFieldNumber = 3,
  };
  // .chk.payload.MovePayload.DestCell dest_cell = 4;
  bool has_dest_cell() const;
  void clear_dest_cell() ;
  const ::chk::payload::MovePayload_DestCell& dest_cell() const;
  PROTOBUF_NODISCARD ::chk::payload::MovePayload_DestCell* release_dest_cell();
  ::chk::payload::MovePayload_DestCell* mutable_dest_cell();
  void set_allocated_dest_cell(::chk::payload::MovePayload_DestCell* value);
  void unsafe_arena_set_allocated_dest_cell(::chk::payload::MovePayload_DestCell* value);
  ::chk::payload::MovePayload_DestCell* unsafe_arena_release_dest_cell();

  private:
  const ::chk::payload::MovePayload_DestCell& _internal_dest_cell() const;
  ::chk::payload::MovePayload_DestCell* _internal_mutable_dest_cell();

  public:
  // .chk.payload.TeamColor from_team = 1;
  void clear_from_team() ;
  ::chk::payload::TeamColor from_team() const;
  void set_from_team(::chk::payload::TeamColor value);

  private:
  ::chk::payload::TeamColor _internal_from_team() const;
  void _internal_set_from_team(::chk::payload::TeamColor value);

  public:
  // int32 piece_id = 2;
  void clear_piece_id() ;
  ::int32_t piece_id() const;
  void set_piece_id(::int32_t value);

  private:
  ::int32_t _internal_piece_id() const;
  void _internal_set_piece_id(::int32_t value);

  public:
  // int32 source_cell = 3;
  void clear_source_cell() ;
  ::int32_t source_cell() const;
  void set_source_cell(::int32_t value);

  private:
  ::int32_t _internal_source_cell() const;
  void _internal_set_source_cell(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chk.payload.MovePayload)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MovePayload_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovePayload& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::chk::payload::MovePayload_DestCell* dest_cell_;
    int from_team_;
    ::int32_t piece_id_;
    ::int32_t source_cell_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fpayload_2eproto;
};
// -------------------------------------------------------------------

class BasePayload final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chk.payload.BasePayload) */ {
 public:
  inline BasePayload() : BasePayload(nullptr) {}
  ~BasePayload() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BasePayload(
      ::google::protobuf::internal::ConstantInitialized);

  inline BasePayload(const BasePayload& from) : BasePayload(nullptr, from) {}
  inline BasePayload(BasePayload&& from) noexcept
      : BasePayload(nullptr, std::move(from)) {}
  inline BasePayload& operator=(const BasePayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline BasePayload& operator=(BasePayload&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BasePayload& default_instance() {
    return *internal_default_instance();
  }
  enum InnerCase {
    kWelcome = 5,
    kMovePayload = 4,
    kStart = 6,
    kExitPayload = 7,
    INNER_NOT_SET = 0,
  };
  static inline const BasePayload* internal_default_instance() {
    return reinterpret_cast<const BasePayload*>(
        &_BasePayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BasePayload& a, BasePayload& b) { a.Swap(&b); }
  inline void Swap(BasePayload* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BasePayload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BasePayload* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BasePayload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BasePayload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BasePayload& from) { BasePayload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BasePayload* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chk.payload.BasePayload"; }

 protected:
  explicit BasePayload(::google::protobuf::Arena* arena);
  BasePayload(::google::protobuf::Arena* arena, const BasePayload& from);
  BasePayload(::google::protobuf::Arena* arena, BasePayload&& from) noexcept
      : BasePayload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoticeFieldNumber = 2,
    kWelcomeFieldNumber = 5,
    kMovePayloadFieldNumber = 4,
    kStartFieldNumber = 6,
    kExitPayloadFieldNumber = 7,
  };
  // string notice = 2;
  void clear_notice() ;
  const std::string& notice() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notice(Arg_&& arg, Args_... args);
  std::string* mutable_notice();
  PROTOBUF_NODISCARD std::string* release_notice();
  void set_allocated_notice(std::string* value);

  private:
  const std::string& _internal_notice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notice(
      const std::string& value);
  std::string* _internal_mutable_notice();

  public:
  // .chk.payload.WelcomePayload welcome = 5;
  bool has_welcome() const;
  private:
  bool _internal_has_welcome() const;

  public:
  void clear_welcome() ;
  const ::chk::payload::WelcomePayload& welcome() const;
  PROTOBUF_NODISCARD ::chk::payload::WelcomePayload* release_welcome();
  ::chk::payload::WelcomePayload* mutable_welcome();
  void set_allocated_welcome(::chk::payload::WelcomePayload* value);
  void unsafe_arena_set_allocated_welcome(::chk::payload::WelcomePayload* value);
  ::chk::payload::WelcomePayload* unsafe_arena_release_welcome();

  private:
  const ::chk::payload::WelcomePayload& _internal_welcome() const;
  ::chk::payload::WelcomePayload* _internal_mutable_welcome();

  public:
  // .chk.payload.MovePayload move_payload = 4;
  bool has_move_payload() const;
  private:
  bool _internal_has_move_payload() const;

  public:
  void clear_move_payload() ;
  const ::chk::payload::MovePayload& move_payload() const;
  PROTOBUF_NODISCARD ::chk::payload::MovePayload* release_move_payload();
  ::chk::payload::MovePayload* mutable_move_payload();
  void set_allocated_move_payload(::chk::payload::MovePayload* value);
  void unsafe_arena_set_allocated_move_payload(::chk::payload::MovePayload* value);
  ::chk::payload::MovePayload* unsafe_arena_release_move_payload();

  private:
  const ::chk::payload::MovePayload& _internal_move_payload() const;
  ::chk::payload::MovePayload* _internal_mutable_move_payload();

  public:
  // .chk.payload.StartPayload start = 6;
  bool has_start() const;
  private:
  bool _internal_has_start() const;

  public:
  void clear_start() ;
  const ::chk::payload::StartPayload& start() const;
  PROTOBUF_NODISCARD ::chk::payload::StartPayload* release_start();
  ::chk::payload::StartPayload* mutable_start();
  void set_allocated_start(::chk::payload::StartPayload* value);
  void unsafe_arena_set_allocated_start(::chk::payload::StartPayload* value);
  ::chk::payload::StartPayload* unsafe_arena_release_start();

  private:
  const ::chk::payload::StartPayload& _internal_start() const;
  ::chk::payload::StartPayload* _internal_mutable_start();

  public:
  // .chk.payload.ExitPayload exit_payload = 7;
  bool has_exit_payload() const;
  private:
  bool _internal_has_exit_payload() const;

  public:
  void clear_exit_payload() ;
  const ::chk::payload::ExitPayload& exit_payload() const;
  PROTOBUF_NODISCARD ::chk::payload::ExitPayload* release_exit_payload();
  ::chk::payload::ExitPayload* mutable_exit_payload();
  void set_allocated_exit_payload(::chk::payload::ExitPayload* value);
  void unsafe_arena_set_allocated_exit_payload(::chk::payload::ExitPayload* value);
  ::chk::payload::ExitPayload* unsafe_arena_release_exit_payload();

  private:
  const ::chk::payload::ExitPayload& _internal_exit_payload() const;
  ::chk::payload::ExitPayload* _internal_mutable_exit_payload();

  public:
  void clear_inner();
  InnerCase inner_case() const;
  // @@protoc_insertion_point(class_scope:chk.payload.BasePayload)
 private:
  class _Internal;
  void set_has_welcome();
  void set_has_move_payload();
  void set_has_start();
  void set_has_exit_payload();
  inline bool has_inner() const;
  inline void clear_has_inner();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 4,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BasePayload_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BasePayload& from_msg);
    ::google::protobuf::internal::ArenaStringPtr notice_;
    union InnerUnion {
      constexpr InnerUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::chk::payload::WelcomePayload* welcome_;
      ::chk::payload::MovePayload* move_payload_;
      ::chk::payload::StartPayload* start_;
      ::chk::payload::ExitPayload* exit_payload_;
    } inner_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_base_5fpayload_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BasePayload

// string notice = 2;
inline void BasePayload::clear_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.ClearToEmpty();
}
inline const std::string& BasePayload::notice() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chk.payload.BasePayload.notice)
  return _internal_notice();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BasePayload::set_notice(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chk.payload.BasePayload.notice)
}
inline std::string* BasePayload::mutable_notice() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_notice();
  // @@protoc_insertion_point(field_mutable:chk.payload.BasePayload.notice)
  return _s;
}
inline const std::string& BasePayload::_internal_notice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notice_.Get();
}
inline void BasePayload::_internal_set_notice(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.Set(value, GetArena());
}
inline std::string* BasePayload::_internal_mutable_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.notice_.Mutable( GetArena());
}
inline std::string* BasePayload::release_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chk.payload.BasePayload.notice)
  return _impl_.notice_.Release();
}
inline void BasePayload::set_allocated_notice(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.notice_.IsDefault()) {
          _impl_.notice_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.notice)
}

// .chk.payload.WelcomePayload welcome = 5;
inline bool BasePayload::has_welcome() const {
  return inner_case() == kWelcome;
}
inline bool BasePayload::_internal_has_welcome() const {
  return inner_case() == kWelcome;
}
inline void BasePayload::set_has_welcome() {
  _impl_._oneof_case_[0] = kWelcome;
}
inline void BasePayload::clear_welcome() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (inner_case() == kWelcome) {
    if (GetArena() == nullptr) {
      delete _impl_.inner_.welcome_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.welcome_);
    }
    clear_has_inner();
  }
}
inline ::chk::payload::WelcomePayload* BasePayload::release_welcome() {
  // @@protoc_insertion_point(field_release:chk.payload.BasePayload.welcome)
  if (inner_case() == kWelcome) {
    clear_has_inner();
    auto* temp = _impl_.inner_.welcome_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.inner_.welcome_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chk::payload::WelcomePayload& BasePayload::_internal_welcome() const {
  return inner_case() == kWelcome ? *_impl_.inner_.welcome_ : reinterpret_cast<::chk::payload::WelcomePayload&>(::chk::payload::_WelcomePayload_default_instance_);
}
inline const ::chk::payload::WelcomePayload& BasePayload::welcome() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chk.payload.BasePayload.welcome)
  return _internal_welcome();
}
inline ::chk::payload::WelcomePayload* BasePayload::unsafe_arena_release_welcome() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chk.payload.BasePayload.welcome)
  if (inner_case() == kWelcome) {
    clear_has_inner();
    auto* temp = _impl_.inner_.welcome_;
    _impl_.inner_.welcome_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BasePayload::unsafe_arena_set_allocated_welcome(::chk::payload::WelcomePayload* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_inner();
  if (value) {
    set_has_welcome();
    _impl_.inner_.welcome_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chk.payload.BasePayload.welcome)
}
inline ::chk::payload::WelcomePayload* BasePayload::_internal_mutable_welcome() {
  if (inner_case() != kWelcome) {
    clear_inner();
    set_has_welcome();
    _impl_.inner_.welcome_ =
        ::google::protobuf::Message::DefaultConstruct<::chk::payload::WelcomePayload>(GetArena());
  }
  return _impl_.inner_.welcome_;
}
inline ::chk::payload::WelcomePayload* BasePayload::mutable_welcome() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chk::payload::WelcomePayload* _msg = _internal_mutable_welcome();
  // @@protoc_insertion_point(field_mutable:chk.payload.BasePayload.welcome)
  return _msg;
}

// .chk.payload.MovePayload move_payload = 4;
inline bool BasePayload::has_move_payload() const {
  return inner_case() == kMovePayload;
}
inline bool BasePayload::_internal_has_move_payload() const {
  return inner_case() == kMovePayload;
}
inline void BasePayload::set_has_move_payload() {
  _impl_._oneof_case_[0] = kMovePayload;
}
inline void BasePayload::clear_move_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (inner_case() == kMovePayload) {
    if (GetArena() == nullptr) {
      delete _impl_.inner_.move_payload_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.move_payload_);
    }
    clear_has_inner();
  }
}
inline ::chk::payload::MovePayload* BasePayload::release_move_payload() {
  // @@protoc_insertion_point(field_release:chk.payload.BasePayload.move_payload)
  if (inner_case() == kMovePayload) {
    clear_has_inner();
    auto* temp = _impl_.inner_.move_payload_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.inner_.move_payload_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chk::payload::MovePayload& BasePayload::_internal_move_payload() const {
  return inner_case() == kMovePayload ? *_impl_.inner_.move_payload_ : reinterpret_cast<::chk::payload::MovePayload&>(::chk::payload::_MovePayload_default_instance_);
}
inline const ::chk::payload::MovePayload& BasePayload::move_payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chk.payload.BasePayload.move_payload)
  return _internal_move_payload();
}
inline ::chk::payload::MovePayload* BasePayload::unsafe_arena_release_move_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chk.payload.BasePayload.move_payload)
  if (inner_case() == kMovePayload) {
    clear_has_inner();
    auto* temp = _impl_.inner_.move_payload_;
    _impl_.inner_.move_payload_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BasePayload::unsafe_arena_set_allocated_move_payload(::chk::payload::MovePayload* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_inner();
  if (value) {
    set_has_move_payload();
    _impl_.inner_.move_payload_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chk.payload.BasePayload.move_payload)
}
inline ::chk::payload::MovePayload* BasePayload::_internal_mutable_move_payload() {
  if (inner_case() != kMovePayload) {
    clear_inner();
    set_has_move_payload();
    _impl_.inner_.move_payload_ =
        ::google::protobuf::Message::DefaultConstruct<::chk::payload::MovePayload>(GetArena());
  }
  return _impl_.inner_.move_payload_;
}
inline ::chk::payload::MovePayload* BasePayload::mutable_move_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chk::payload::MovePayload* _msg = _internal_mutable_move_payload();
  // @@protoc_insertion_point(field_mutable:chk.payload.BasePayload.move_payload)
  return _msg;
}

// .chk.payload.StartPayload start = 6;
inline bool BasePayload::has_start() const {
  return inner_case() == kStart;
}
inline bool BasePayload::_internal_has_start() const {
  return inner_case() == kStart;
}
inline void BasePayload::set_has_start() {
  _impl_._oneof_case_[0] = kStart;
}
inline void BasePayload::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (inner_case() == kStart) {
    if (GetArena() == nullptr) {
      delete _impl_.inner_.start_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.start_);
    }
    clear_has_inner();
  }
}
inline ::chk::payload::StartPayload* BasePayload::release_start() {
  // @@protoc_insertion_point(field_release:chk.payload.BasePayload.start)
  if (inner_case() == kStart) {
    clear_has_inner();
    auto* temp = _impl_.inner_.start_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.inner_.start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chk::payload::StartPayload& BasePayload::_internal_start() const {
  return inner_case() == kStart ? *_impl_.inner_.start_ : reinterpret_cast<::chk::payload::StartPayload&>(::chk::payload::_StartPayload_default_instance_);
}
inline const ::chk::payload::StartPayload& BasePayload::start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chk.payload.BasePayload.start)
  return _internal_start();
}
inline ::chk::payload::StartPayload* BasePayload::unsafe_arena_release_start() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chk.payload.BasePayload.start)
  if (inner_case() == kStart) {
    clear_has_inner();
    auto* temp = _impl_.inner_.start_;
    _impl_.inner_.start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BasePayload::unsafe_arena_set_allocated_start(::chk::payload::StartPayload* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_inner();
  if (value) {
    set_has_start();
    _impl_.inner_.start_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chk.payload.BasePayload.start)
}
inline ::chk::payload::StartPayload* BasePayload::_internal_mutable_start() {
  if (inner_case() != kStart) {
    clear_inner();
    set_has_start();
    _impl_.inner_.start_ =
        ::google::protobuf::Message::DefaultConstruct<::chk::payload::StartPayload>(GetArena());
  }
  return _impl_.inner_.start_;
}
inline ::chk::payload::StartPayload* BasePayload::mutable_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chk::payload::StartPayload* _msg = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:chk.payload.BasePayload.start)
  return _msg;
}

// .chk.payload.ExitPayload exit_payload = 7;
inline bool BasePayload::has_exit_payload() const {
  return inner_case() == kExitPayload;
}
inline bool BasePayload::_internal_has_exit_payload() const {
  return inner_case() == kExitPayload;
}
inline void BasePayload::set_has_exit_payload() {
  _impl_._oneof_case_[0] = kExitPayload;
}
inline void BasePayload::clear_exit_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (inner_case() == kExitPayload) {
    if (GetArena() == nullptr) {
      delete _impl_.inner_.exit_payload_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.exit_payload_);
    }
    clear_has_inner();
  }
}
inline ::chk::payload::ExitPayload* BasePayload::release_exit_payload() {
  // @@protoc_insertion_point(field_release:chk.payload.BasePayload.exit_payload)
  if (inner_case() == kExitPayload) {
    clear_has_inner();
    auto* temp = _impl_.inner_.exit_payload_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.inner_.exit_payload_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chk::payload::ExitPayload& BasePayload::_internal_exit_payload() const {
  return inner_case() == kExitPayload ? *_impl_.inner_.exit_payload_ : reinterpret_cast<::chk::payload::ExitPayload&>(::chk::payload::_ExitPayload_default_instance_);
}
inline const ::chk::payload::ExitPayload& BasePayload::exit_payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chk.payload.BasePayload.exit_payload)
  return _internal_exit_payload();
}
inline ::chk::payload::ExitPayload* BasePayload::unsafe_arena_release_exit_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chk.payload.BasePayload.exit_payload)
  if (inner_case() == kExitPayload) {
    clear_has_inner();
    auto* temp = _impl_.inner_.exit_payload_;
    _impl_.inner_.exit_payload_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BasePayload::unsafe_arena_set_allocated_exit_payload(::chk::payload::ExitPayload* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_inner();
  if (value) {
    set_has_exit_payload();
    _impl_.inner_.exit_payload_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chk.payload.BasePayload.exit_payload)
}
inline ::chk::payload::ExitPayload* BasePayload::_internal_mutable_exit_payload() {
  if (inner_case() != kExitPayload) {
    clear_inner();
    set_has_exit_payload();
    _impl_.inner_.exit_payload_ =
        ::google::protobuf::Message::DefaultConstruct<::chk::payload::ExitPayload>(GetArena());
  }
  return _impl_.inner_.exit_payload_;
}
inline ::chk::payload::ExitPayload* BasePayload::mutable_exit_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chk::payload::ExitPayload* _msg = _internal_mutable_exit_payload();
  // @@protoc_insertion_point(field_mutable:chk.payload.BasePayload.exit_payload)
  return _msg;
}

inline bool BasePayload::has_inner() const {
  return inner_case() != INNER_NOT_SET;
}
inline void BasePayload::clear_has_inner() {
  _impl_._oneof_case_[0] = INNER_NOT_SET;
}
inline BasePayload::InnerCase BasePayload::inner_case() const {
  return BasePayload::InnerCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// WelcomePayload

// .chk.payload.TeamColor my_team = 1;
inline void WelcomePayload::clear_my_team() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_team_ = 0;
}
inline ::chk::payload::TeamColor WelcomePayload::my_team() const {
  // @@protoc_insertion_point(field_get:chk.payload.WelcomePayload.my_team)
  return _internal_my_team();
}
inline void WelcomePayload::set_my_team(::chk::payload::TeamColor value) {
  _internal_set_my_team(value);
  // @@protoc_insertion_point(field_set:chk.payload.WelcomePayload.my_team)
}
inline ::chk::payload::TeamColor WelcomePayload::_internal_my_team() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::chk::payload::TeamColor>(_impl_.my_team_);
}
inline void WelcomePayload::_internal_set_my_team(::chk::payload::TeamColor value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_team_ = value;
}

// -------------------------------------------------------------------

// StartPayload

// repeated int32 pieces_red = 1;
inline int StartPayload::_internal_pieces_red_size() const {
  return _internal_pieces_red().size();
}
inline int StartPayload::pieces_red_size() const {
  return _internal_pieces_red_size();
}
inline void StartPayload::clear_pieces_red() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pieces_red_.Clear();
}
inline ::int32_t StartPayload::pieces_red(int index) const {
  // @@protoc_insertion_point(field_get:chk.payload.StartPayload.pieces_red)
  return _internal_pieces_red().Get(index);
}
inline void StartPayload::set_pieces_red(int index, ::int32_t value) {
  _internal_mutable_pieces_red()->Set(index, value);
  // @@protoc_insertion_point(field_set:chk.payload.StartPayload.pieces_red)
}
inline void StartPayload::add_pieces_red(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pieces_red()->Add(value);
  // @@protoc_insertion_point(field_add:chk.payload.StartPayload.pieces_red)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& StartPayload::pieces_red() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chk.payload.StartPayload.pieces_red)
  return _internal_pieces_red();
}
inline ::google::protobuf::RepeatedField<::int32_t>* StartPayload::mutable_pieces_red()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chk.payload.StartPayload.pieces_red)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pieces_red();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
StartPayload::_internal_pieces_red() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pieces_red_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* StartPayload::_internal_mutable_pieces_red() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pieces_red_;
}

// repeated int32 pieces_black = 2;
inline int StartPayload::_internal_pieces_black_size() const {
  return _internal_pieces_black().size();
}
inline int StartPayload::pieces_black_size() const {
  return _internal_pieces_black_size();
}
inline void StartPayload::clear_pieces_black() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pieces_black_.Clear();
}
inline ::int32_t StartPayload::pieces_black(int index) const {
  // @@protoc_insertion_point(field_get:chk.payload.StartPayload.pieces_black)
  return _internal_pieces_black().Get(index);
}
inline void StartPayload::set_pieces_black(int index, ::int32_t value) {
  _internal_mutable_pieces_black()->Set(index, value);
  // @@protoc_insertion_point(field_set:chk.payload.StartPayload.pieces_black)
}
inline void StartPayload::add_pieces_black(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pieces_black()->Add(value);
  // @@protoc_insertion_point(field_add:chk.payload.StartPayload.pieces_black)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& StartPayload::pieces_black() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chk.payload.StartPayload.pieces_black)
  return _internal_pieces_black();
}
inline ::google::protobuf::RepeatedField<::int32_t>* StartPayload::mutable_pieces_black()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chk.payload.StartPayload.pieces_black)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pieces_black();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
StartPayload::_internal_pieces_black() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pieces_black_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* StartPayload::_internal_mutable_pieces_black() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pieces_black_;
}

// -------------------------------------------------------------------

// MovePayload_DestCell

// int32 cell_index = 1;
inline void MovePayload_DestCell::clear_cell_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_index_ = 0;
}
inline ::int32_t MovePayload_DestCell::cell_index() const {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.DestCell.cell_index)
  return _internal_cell_index();
}
inline void MovePayload_DestCell::set_cell_index(::int32_t value) {
  _internal_set_cell_index(value);
  // @@protoc_insertion_point(field_set:chk.payload.MovePayload.DestCell.cell_index)
}
inline ::int32_t MovePayload_DestCell::_internal_cell_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cell_index_;
}
inline void MovePayload_DestCell::_internal_set_cell_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_index_ = value;
}

// float x = 2;
inline void MovePayload_DestCell::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float MovePayload_DestCell::x() const {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.DestCell.x)
  return _internal_x();
}
inline void MovePayload_DestCell::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:chk.payload.MovePayload.DestCell.x)
}
inline float MovePayload_DestCell::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void MovePayload_DestCell::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 3;
inline void MovePayload_DestCell::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float MovePayload_DestCell::y() const {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.DestCell.y)
  return _internal_y();
}
inline void MovePayload_DestCell::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:chk.payload.MovePayload.DestCell.y)
}
inline float MovePayload_DestCell::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void MovePayload_DestCell::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// MovePayload

// .chk.payload.TeamColor from_team = 1;
inline void MovePayload::clear_from_team() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_team_ = 0;
}
inline ::chk::payload::TeamColor MovePayload::from_team() const {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.from_team)
  return _internal_from_team();
}
inline void MovePayload::set_from_team(::chk::payload::TeamColor value) {
  _internal_set_from_team(value);
  // @@protoc_insertion_point(field_set:chk.payload.MovePayload.from_team)
}
inline ::chk::payload::TeamColor MovePayload::_internal_from_team() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::chk::payload::TeamColor>(_impl_.from_team_);
}
inline void MovePayload::_internal_set_from_team(::chk::payload::TeamColor value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_team_ = value;
}

// int32 piece_id = 2;
inline void MovePayload::clear_piece_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.piece_id_ = 0;
}
inline ::int32_t MovePayload::piece_id() const {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.piece_id)
  return _internal_piece_id();
}
inline void MovePayload::set_piece_id(::int32_t value) {
  _internal_set_piece_id(value);
  // @@protoc_insertion_point(field_set:chk.payload.MovePayload.piece_id)
}
inline ::int32_t MovePayload::_internal_piece_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.piece_id_;
}
inline void MovePayload::_internal_set_piece_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.piece_id_ = value;
}

// int32 source_cell = 3;
inline void MovePayload::clear_source_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cell_ = 0;
}
inline ::int32_t MovePayload::source_cell() const {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.source_cell)
  return _internal_source_cell();
}
inline void MovePayload::set_source_cell(::int32_t value) {
  _internal_set_source_cell(value);
  // @@protoc_insertion_point(field_set:chk.payload.MovePayload.source_cell)
}
inline ::int32_t MovePayload::_internal_source_cell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_cell_;
}
inline void MovePayload::_internal_set_source_cell(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cell_ = value;
}

// .chk.payload.MovePayload.DestCell dest_cell = 4;
inline bool MovePayload::has_dest_cell() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dest_cell_ != nullptr);
  return value;
}
inline void MovePayload::clear_dest_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dest_cell_ != nullptr) _impl_.dest_cell_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::chk::payload::MovePayload_DestCell& MovePayload::_internal_dest_cell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::chk::payload::MovePayload_DestCell* p = _impl_.dest_cell_;
  return p != nullptr ? *p : reinterpret_cast<const ::chk::payload::MovePayload_DestCell&>(::chk::payload::_MovePayload_DestCell_default_instance_);
}
inline const ::chk::payload::MovePayload_DestCell& MovePayload::dest_cell() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chk.payload.MovePayload.dest_cell)
  return _internal_dest_cell();
}
inline void MovePayload::unsafe_arena_set_allocated_dest_cell(::chk::payload::MovePayload_DestCell* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dest_cell_);
  }
  _impl_.dest_cell_ = reinterpret_cast<::chk::payload::MovePayload_DestCell*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chk.payload.MovePayload.dest_cell)
}
inline ::chk::payload::MovePayload_DestCell* MovePayload::release_dest_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::chk::payload::MovePayload_DestCell* released = _impl_.dest_cell_;
  _impl_.dest_cell_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::chk::payload::MovePayload_DestCell* MovePayload::unsafe_arena_release_dest_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chk.payload.MovePayload.dest_cell)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::chk::payload::MovePayload_DestCell* temp = _impl_.dest_cell_;
  _impl_.dest_cell_ = nullptr;
  return temp;
}
inline ::chk::payload::MovePayload_DestCell* MovePayload::_internal_mutable_dest_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dest_cell_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::chk::payload::MovePayload_DestCell>(GetArena());
    _impl_.dest_cell_ = reinterpret_cast<::chk::payload::MovePayload_DestCell*>(p);
  }
  return _impl_.dest_cell_;
}
inline ::chk::payload::MovePayload_DestCell* MovePayload::mutable_dest_cell() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::chk::payload::MovePayload_DestCell* _msg = _internal_mutable_dest_cell();
  // @@protoc_insertion_point(field_mutable:chk.payload.MovePayload.dest_cell)
  return _msg;
}
inline void MovePayload::set_allocated_dest_cell(::chk::payload::MovePayload_DestCell* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dest_cell_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dest_cell_ = reinterpret_cast<::chk::payload::MovePayload_DestCell*>(value);
  // @@protoc_insertion_point(field_set_allocated:chk.payload.MovePayload.dest_cell)
}

// -------------------------------------------------------------------

// ExitPayload

// .chk.payload.TeamColor from_team = 1;
inline void ExitPayload::clear_from_team() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_team_ = 0;
}
inline ::chk::payload::TeamColor ExitPayload::from_team() const {
  // @@protoc_insertion_point(field_get:chk.payload.ExitPayload.from_team)
  return _internal_from_team();
}
inline void ExitPayload::set_from_team(::chk::payload::TeamColor value) {
  _internal_set_from_team(value);
  // @@protoc_insertion_point(field_set:chk.payload.ExitPayload.from_team)
}
inline ::chk::payload::TeamColor ExitPayload::_internal_from_team() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::chk::payload::TeamColor>(_impl_.from_team_);
}
inline void ExitPayload::_internal_set_from_team(::chk::payload::TeamColor value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_team_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace payload
}  // namespace chk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::chk::payload::TeamColor> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::chk::payload::TeamColor>() {
  return ::chk::payload::TeamColor_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_base_5fpayload_2eproto_2epb_2eh
// clang-format on
