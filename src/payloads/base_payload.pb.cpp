// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base_payload.proto
// Protobuf C++ Version: 5.27.1
// clang-format off
#include "base_payload.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chk {
namespace payload {

inline constexpr WelcomePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : server_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        my_team_{static_cast< ::chk::payload::TeamColor >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WelcomePayload::WelcomePayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WelcomePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WelcomePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WelcomePayloadDefaultTypeInternal() {}
  union {
    WelcomePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WelcomePayloadDefaultTypeInternal _WelcomePayload_default_instance_;

inline constexpr StartPayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pieces_red_{},
        _pieces_red_cached_byte_size_{0},
        pieces_black_{},
        _pieces_black_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartPayload::StartPayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartPayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartPayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartPayloadDefaultTypeInternal() {}
  union {
    StartPayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartPayloadDefaultTypeInternal _StartPayload_default_instance_;

inline constexpr MovePayload_DestCell::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cell_index_{0},
        x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MovePayload_DestCell::MovePayload_DestCell(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MovePayload_DestCellDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovePayload_DestCellDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovePayload_DestCellDefaultTypeInternal() {}
  union {
    MovePayload_DestCell _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovePayload_DestCellDefaultTypeInternal _MovePayload_DestCell_default_instance_;

inline constexpr ExitPayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_team_{static_cast< ::chk::payload::TeamColor >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExitPayload::ExitPayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExitPayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExitPayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExitPayloadDefaultTypeInternal() {}
  union {
    ExitPayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExitPayloadDefaultTypeInternal _ExitPayload_default_instance_;

inline constexpr CapturePayload_TargetDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : prey_piece_id_{0},
        prey_cell_idx_{0},
        hunter_next_cell_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CapturePayload_TargetDetails::CapturePayload_TargetDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CapturePayload_TargetDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapturePayload_TargetDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapturePayload_TargetDetailsDefaultTypeInternal() {}
  union {
    CapturePayload_TargetDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapturePayload_TargetDetailsDefaultTypeInternal _CapturePayload_TargetDetails_default_instance_;

inline constexpr MovePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dest_cell_{nullptr},
        from_team_{static_cast< ::chk::payload::TeamColor >(0)},
        piece_id_{0},
        source_cell_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MovePayload::MovePayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MovePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovePayloadDefaultTypeInternal() {}
  union {
    MovePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovePayloadDefaultTypeInternal _MovePayload_default_instance_;

inline constexpr CapturePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        details_{nullptr},
        from_team_{static_cast< ::chk::payload::TeamColor >(0)},
        hunter_piece_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CapturePayload::CapturePayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CapturePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapturePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapturePayloadDefaultTypeInternal() {}
  union {
    CapturePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapturePayloadDefaultTypeInternal _CapturePayload_default_instance_;

inline constexpr BasePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : notice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inner_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BasePayload::BasePayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BasePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BasePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BasePayloadDefaultTypeInternal() {}
  union {
    BasePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BasePayloadDefaultTypeInternal _BasePayload_default_instance_;
}  // namespace payload
}  // namespace chk
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_base_5fpayload_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_base_5fpayload_2eproto = nullptr;
const ::uint32_t
    TableStruct_base_5fpayload_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_.notice_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_.inner_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _impl_.my_team_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _impl_.server_version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::StartPayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::StartPayload, _impl_.pieces_red_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::StartPayload, _impl_.pieces_black_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_DestCell, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_DestCell, _impl_.cell_index_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_DestCell, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_DestCell, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.from_team_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.piece_id_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.source_cell_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.dest_cell_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::ExitPayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::ExitPayload, _impl_.from_team_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_.prey_piece_id_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_.prey_cell_idx_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_.hunter_next_cell_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.from_team_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.hunter_piece_id_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.details_),
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::chk::payload::BasePayload)},
        {15, -1, -1, sizeof(::chk::payload::WelcomePayload)},
        {25, -1, -1, sizeof(::chk::payload::StartPayload)},
        {35, -1, -1, sizeof(::chk::payload::MovePayload_DestCell)},
        {46, 58, -1, sizeof(::chk::payload::MovePayload)},
        {62, -1, -1, sizeof(::chk::payload::ExitPayload)},
        {71, -1, -1, sizeof(::chk::payload::CapturePayload_TargetDetails)},
        {82, 93, -1, sizeof(::chk::payload::CapturePayload)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::chk::payload::_BasePayload_default_instance_._instance,
    &::chk::payload::_WelcomePayload_default_instance_._instance,
    &::chk::payload::_StartPayload_default_instance_._instance,
    &::chk::payload::_MovePayload_DestCell_default_instance_._instance,
    &::chk::payload::_MovePayload_default_instance_._instance,
    &::chk::payload::_ExitPayload_default_instance_._instance,
    &::chk::payload::_CapturePayload_TargetDetails_default_instance_._instance,
    &::chk::payload::_CapturePayload_default_instance_._instance,
};
const char descriptor_table_protodef_base_5fpayload_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022base_payload.proto\022\013chk.payload\"\236\002\n\013Ba"
    "sePayload\022\016\n\006notice\030\002 \001(\t\022.\n\007welcome\030\003 \001"
    "(\0132\033.chk.payload.WelcomePayloadH\000\0220\n\014mov"
    "e_payload\030\004 \001(\0132\030.chk.payload.MovePayloa"
    "dH\000\022*\n\005start\030\005 \001(\0132\031.chk.payload.StartPa"
    "yloadH\000\0220\n\014exit_payload\030\006 \001(\0132\030.chk.payl"
    "oad.ExitPayloadH\000\0226\n\017capture_payload\030\007 \001"
    "(\0132\033.chk.payload.CapturePayloadH\000B\007\n\005inn"
    "er\"Q\n\016WelcomePayload\022\'\n\007my_team\030\001 \001(\0162\026."
    "chk.payload.TeamColor\022\026\n\016server_version\030"
    "\002 \001(\t\"8\n\014StartPayload\022\022\n\npieces_red\030\001 \003("
    "\005\022\024\n\014pieces_black\030\002 \003(\005\"\313\001\n\013MovePayload\022"
    ")\n\tfrom_team\030\001 \001(\0162\026.chk.payload.TeamCol"
    "or\022\020\n\010piece_id\030\002 \001(\005\022\023\n\013source_cell\030\003 \001("
    "\005\0224\n\tdest_cell\030\004 \001(\0132!.chk.payload.MoveP"
    "ayload.DestCell\0324\n\010DestCell\022\022\n\ncell_inde"
    "x\030\001 \001(\005\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\"8\n\013ExitPay"
    "load\022)\n\tfrom_team\030\001 \001(\0162\026.chk.payload.Te"
    "amColor\"\351\001\n\016CapturePayload\022)\n\tfrom_team\030"
    "\001 \001(\0162\026.chk.payload.TeamColor\022\027\n\017hunter_"
    "piece_id\030\002 \001(\005\022:\n\007details\030\003 \001(\0132).chk.pa"
    "yload.CapturePayload.TargetDetails\032W\n\rTa"
    "rgetDetails\022\025\n\rprey_piece_id\030\001 \001(\005\022\025\n\rpr"
    "ey_cell_idx\030\002 \001(\005\022\030\n\020hunter_next_cell\030\003 "
    "\001(\005*\?\n\tTeamColor\022\024\n\020TEAM_UNSPECIFIED\020\000\022\014"
    "\n\010TEAM_RED\020\001\022\016\n\nTEAM_BLACK\020\002B\027Z\025checkers"
    "-backend/gameb\006proto3"
};
static ::absl::once_flag descriptor_table_base_5fpayload_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_base_5fpayload_2eproto = {
    false,
    false,
    1061,
    descriptor_table_protodef_base_5fpayload_2eproto,
    "base_payload.proto",
    &descriptor_table_base_5fpayload_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_base_5fpayload_2eproto::offsets,
    file_level_enum_descriptors_base_5fpayload_2eproto,
    file_level_service_descriptors_base_5fpayload_2eproto,
};
namespace chk {
namespace payload {
const ::google::protobuf::EnumDescriptor* TeamColor_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_base_5fpayload_2eproto);
  return file_level_enum_descriptors_base_5fpayload_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TeamColor_internal_data_[] = {
    196608u, 0u, };
bool TeamColor_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class BasePayload::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_._oneof_case_);
};

void BasePayload::set_allocated_welcome(::chk::payload::WelcomePayload* welcome) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (welcome) {
    ::google::protobuf::Arena* submessage_arena = welcome->GetArena();
    if (message_arena != submessage_arena) {
      welcome = ::google::protobuf::internal::GetOwnedMessage(message_arena, welcome, submessage_arena);
    }
    set_has_welcome();
    _impl_.inner_.welcome_ = welcome;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.welcome)
}
void BasePayload::set_allocated_move_payload(::chk::payload::MovePayload* move_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (move_payload) {
    ::google::protobuf::Arena* submessage_arena = move_payload->GetArena();
    if (message_arena != submessage_arena) {
      move_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, move_payload, submessage_arena);
    }
    set_has_move_payload();
    _impl_.inner_.move_payload_ = move_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.move_payload)
}
void BasePayload::set_allocated_start(::chk::payload::StartPayload* start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.inner_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.start)
}
void BasePayload::set_allocated_exit_payload(::chk::payload::ExitPayload* exit_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (exit_payload) {
    ::google::protobuf::Arena* submessage_arena = exit_payload->GetArena();
    if (message_arena != submessage_arena) {
      exit_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, exit_payload, submessage_arena);
    }
    set_has_exit_payload();
    _impl_.inner_.exit_payload_ = exit_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.exit_payload)
}
void BasePayload::set_allocated_capture_payload(::chk::payload::CapturePayload* capture_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (capture_payload) {
    ::google::protobuf::Arena* submessage_arena = capture_payload->GetArena();
    if (message_arena != submessage_arena) {
      capture_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, capture_payload, submessage_arena);
    }
    set_has_capture_payload();
    _impl_.inner_.capture_payload_ = capture_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.capture_payload)
}
BasePayload::BasePayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.BasePayload)
}
inline PROTOBUF_NDEBUG_INLINE BasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chk::payload::BasePayload& from_msg)
      : notice_(arena, from.notice_),
        inner_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BasePayload::BasePayload(
    ::google::protobuf::Arena* arena,
    const BasePayload& from)
    : ::google::protobuf::Message(arena) {
  BasePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (inner_case()) {
    case INNER_NOT_SET:
      break;
      case kWelcome:
        _impl_.inner_.welcome_ = ::google::protobuf::Message::CopyConstruct<::chk::payload::WelcomePayload>(arena, *from._impl_.inner_.welcome_);
        break;
      case kMovePayload:
        _impl_.inner_.move_payload_ = ::google::protobuf::Message::CopyConstruct<::chk::payload::MovePayload>(arena, *from._impl_.inner_.move_payload_);
        break;
      case kStart:
        _impl_.inner_.start_ = ::google::protobuf::Message::CopyConstruct<::chk::payload::StartPayload>(arena, *from._impl_.inner_.start_);
        break;
      case kExitPayload:
        _impl_.inner_.exit_payload_ = ::google::protobuf::Message::CopyConstruct<::chk::payload::ExitPayload>(arena, *from._impl_.inner_.exit_payload_);
        break;
      case kCapturePayload:
        _impl_.inner_.capture_payload_ = ::google::protobuf::Message::CopyConstruct<::chk::payload::CapturePayload>(arena, *from._impl_.inner_.capture_payload_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:chk.payload.BasePayload)
}
inline PROTOBUF_NDEBUG_INLINE BasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : notice_(arena),
        inner_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BasePayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BasePayload::~BasePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.BasePayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BasePayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.notice_.Destroy();
  if (has_inner()) {
    clear_inner();
  }
  _impl_.~Impl_();
}

void BasePayload::clear_inner() {
// @@protoc_insertion_point(one_of_clear_start:chk.payload.BasePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (inner_case()) {
    case kWelcome: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.welcome_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.welcome_);
      }
      break;
    }
    case kMovePayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.move_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.move_payload_);
      }
      break;
    }
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.start_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.start_);
      }
      break;
    }
    case kExitPayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.exit_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.exit_payload_);
      }
      break;
    }
    case kCapturePayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.capture_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.capture_payload_);
      }
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INNER_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
BasePayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BasePayload, _impl_._cached_size_),
              false,
          },
          &BasePayload::MergeImpl,
          &BasePayload::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 5, 38, 2> BasePayload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967169,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BasePayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::BasePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string notice = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.notice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string notice = 2;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.notice_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chk.payload.WelcomePayload welcome = 3;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.welcome_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.MovePayload move_payload = 4;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.move_payload_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.StartPayload start = 5;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.start_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.ExitPayload exit_payload = 6;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.exit_payload_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.CapturePayload capture_payload = 7;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.capture_payload_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chk::payload::WelcomePayload>()},
    {::_pbi::TcParser::GetTable<::chk::payload::MovePayload>()},
    {::_pbi::TcParser::GetTable<::chk::payload::StartPayload>()},
    {::_pbi::TcParser::GetTable<::chk::payload::ExitPayload>()},
    {::_pbi::TcParser::GetTable<::chk::payload::CapturePayload>()},
  }}, {{
    "\27\6\0\0\0\0\0\0"
    "chk.payload.BasePayload"
    "notice"
  }},
};

PROTOBUF_NOINLINE void BasePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.BasePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.notice_.ClearToEmpty();
  clear_inner();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BasePayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.BasePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string notice = 2;
  if (!this->_internal_notice().empty()) {
    const std::string& _s = this->_internal_notice();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chk.payload.BasePayload.notice");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  switch (inner_case()) {
    case kWelcome: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.inner_.welcome_, _impl_.inner_.welcome_->GetCachedSize(), target, stream);
      break;
    }
    case kMovePayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.inner_.move_payload_, _impl_.inner_.move_payload_->GetCachedSize(), target, stream);
      break;
    }
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.inner_.start_, _impl_.inner_.start_->GetCachedSize(), target, stream);
      break;
    }
    case kExitPayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.inner_.exit_payload_, _impl_.inner_.exit_payload_->GetCachedSize(), target, stream);
      break;
    }
    case kCapturePayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.inner_.capture_payload_, _impl_.inner_.capture_payload_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.BasePayload)
  return target;
}

::size_t BasePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.BasePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string notice = 2;
  if (!this->_internal_notice().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_notice());
  }

  switch (inner_case()) {
    // .chk.payload.WelcomePayload welcome = 3;
    case kWelcome: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.inner_.welcome_);
      break;
    }
    // .chk.payload.MovePayload move_payload = 4;
    case kMovePayload: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.inner_.move_payload_);
      break;
    }
    // .chk.payload.StartPayload start = 5;
    case kStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.inner_.start_);
      break;
    }
    // .chk.payload.ExitPayload exit_payload = 6;
    case kExitPayload: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.inner_.exit_payload_);
      break;
    }
    // .chk.payload.CapturePayload capture_payload = 7;
    case kCapturePayload: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.inner_.capture_payload_);
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BasePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BasePayload*>(&to_msg);
  auto& from = static_cast<const BasePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.BasePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_notice().empty()) {
    _this->_internal_set_notice(from._internal_notice());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_inner();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWelcome: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.welcome_ =
              ::google::protobuf::Message::CopyConstruct<::chk::payload::WelcomePayload>(arena, *from._impl_.inner_.welcome_);
        } else {
          _this->_impl_.inner_.welcome_->MergeFrom(from._internal_welcome());
        }
        break;
      }
      case kMovePayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.move_payload_ =
              ::google::protobuf::Message::CopyConstruct<::chk::payload::MovePayload>(arena, *from._impl_.inner_.move_payload_);
        } else {
          _this->_impl_.inner_.move_payload_->MergeFrom(from._internal_move_payload());
        }
        break;
      }
      case kStart: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.start_ =
              ::google::protobuf::Message::CopyConstruct<::chk::payload::StartPayload>(arena, *from._impl_.inner_.start_);
        } else {
          _this->_impl_.inner_.start_->MergeFrom(from._internal_start());
        }
        break;
      }
      case kExitPayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.exit_payload_ =
              ::google::protobuf::Message::CopyConstruct<::chk::payload::ExitPayload>(arena, *from._impl_.inner_.exit_payload_);
        } else {
          _this->_impl_.inner_.exit_payload_->MergeFrom(from._internal_exit_payload());
        }
        break;
      }
      case kCapturePayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.capture_payload_ =
              ::google::protobuf::Message::CopyConstruct<::chk::payload::CapturePayload>(arena, *from._impl_.inner_.capture_payload_);
        } else {
          _this->_impl_.inner_.capture_payload_->MergeFrom(from._internal_capture_payload());
        }
        break;
      }
      case INNER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BasePayload::CopyFrom(const BasePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.BasePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BasePayload::InternalSwap(BasePayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notice_, &other->_impl_.notice_, arena);
  swap(_impl_.inner_, other->_impl_.inner_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BasePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WelcomePayload::_Internal {
 public:
};

WelcomePayload::WelcomePayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.WelcomePayload)
}
inline PROTOBUF_NDEBUG_INLINE WelcomePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chk::payload::WelcomePayload& from_msg)
      : server_version_(arena, from.server_version_),
        _cached_size_{0} {}

WelcomePayload::WelcomePayload(
    ::google::protobuf::Arena* arena,
    const WelcomePayload& from)
    : ::google::protobuf::Message(arena) {
  WelcomePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.my_team_ = from._impl_.my_team_;

  // @@protoc_insertion_point(copy_constructor:chk.payload.WelcomePayload)
}
inline PROTOBUF_NDEBUG_INLINE WelcomePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : server_version_(arena),
        _cached_size_{0} {}

inline void WelcomePayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.my_team_ = {};
}
WelcomePayload::~WelcomePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.WelcomePayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WelcomePayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.server_version_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
WelcomePayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_._cached_size_),
              false,
          },
          &WelcomePayload::MergeImpl,
          &WelcomePayload::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> WelcomePayload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WelcomePayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::WelcomePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string server_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.server_version_)}},
    // .chk.payload.TeamColor my_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WelcomePayload, _impl_.my_team_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.my_team_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor my_team = 1;
    {PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.my_team_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string server_version = 2;
    {PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.server_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\16\0\0\0\0\0"
    "chk.payload.WelcomePayload"
    "server_version"
  }},
};

PROTOBUF_NOINLINE void WelcomePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.WelcomePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_version_.ClearToEmpty();
  _impl_.my_team_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* WelcomePayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.WelcomePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor my_team = 1;
  if (this->_internal_my_team() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_my_team(), target);
  }

  // string server_version = 2;
  if (!this->_internal_server_version().empty()) {
    const std::string& _s = this->_internal_server_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chk.payload.WelcomePayload.server_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.WelcomePayload)
  return target;
}

::size_t WelcomePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.WelcomePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string server_version = 2;
  if (!this->_internal_server_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_server_version());
  }

  // .chk.payload.TeamColor my_team = 1;
  if (this->_internal_my_team() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_my_team());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void WelcomePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WelcomePayload*>(&to_msg);
  auto& from = static_cast<const WelcomePayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.WelcomePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server_version().empty()) {
    _this->_internal_set_server_version(from._internal_server_version());
  }
  if (from._internal_my_team() != 0) {
    _this->_impl_.my_team_ = from._impl_.my_team_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WelcomePayload::CopyFrom(const WelcomePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.WelcomePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WelcomePayload::InternalSwap(WelcomePayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_version_, &other->_impl_.server_version_, arena);
  swap(_impl_.my_team_, other->_impl_.my_team_);
}

::google::protobuf::Metadata WelcomePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StartPayload::_Internal {
 public:
};

StartPayload::StartPayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.StartPayload)
}
inline PROTOBUF_NDEBUG_INLINE StartPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chk::payload::StartPayload& from_msg)
      : pieces_red_{visibility, arena, from.pieces_red_},
        _pieces_red_cached_byte_size_{0},
        pieces_black_{visibility, arena, from.pieces_black_},
        _pieces_black_cached_byte_size_{0},
        _cached_size_{0} {}

StartPayload::StartPayload(
    ::google::protobuf::Arena* arena,
    const StartPayload& from)
    : ::google::protobuf::Message(arena) {
  StartPayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chk.payload.StartPayload)
}
inline PROTOBUF_NDEBUG_INLINE StartPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pieces_red_{visibility, arena},
        _pieces_red_cached_byte_size_{0},
        pieces_black_{visibility, arena},
        _pieces_black_cached_byte_size_{0},
        _cached_size_{0} {}

inline void StartPayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StartPayload::~StartPayload() {
  // @@protoc_insertion_point(destructor:chk.payload.StartPayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartPayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StartPayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StartPayload, _impl_._cached_size_),
              false,
          },
          &StartPayload::MergeImpl,
          &StartPayload::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StartPayload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartPayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::StartPayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 pieces_black = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_black_)}},
    // repeated int32 pieces_red = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_red_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 pieces_red = 1;
    {PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_red_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 pieces_black = 2;
    {PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_black_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StartPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.StartPayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pieces_red_.Clear();
  _impl_.pieces_black_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StartPayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.StartPayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 pieces_red = 1;
  {
    int byte_size = _impl_._pieces_red_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_pieces_red(), byte_size, target);
    }
  }

  // repeated int32 pieces_black = 2;
  {
    int byte_size = _impl_._pieces_black_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_pieces_black(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.StartPayload)
  return target;
}

::size_t StartPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.StartPayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int32 pieces_red = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_pieces_red())
    ;
    _impl_._pieces_red_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 pieces_black = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_pieces_black())
    ;
    _impl_._pieces_black_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StartPayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StartPayload*>(&to_msg);
  auto& from = static_cast<const StartPayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.StartPayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pieces_red()->MergeFrom(from._internal_pieces_red());
  _this->_internal_mutable_pieces_black()->MergeFrom(from._internal_pieces_black());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartPayload::CopyFrom(const StartPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.StartPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StartPayload::InternalSwap(StartPayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pieces_red_.InternalSwap(&other->_impl_.pieces_red_);
  _impl_.pieces_black_.InternalSwap(&other->_impl_.pieces_black_);
}

::google::protobuf::Metadata StartPayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovePayload_DestCell::_Internal {
 public:
};

MovePayload_DestCell::MovePayload_DestCell(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.MovePayload.DestCell)
}
MovePayload_DestCell::MovePayload_DestCell(
    ::google::protobuf::Arena* arena, const MovePayload_DestCell& from)
    : MovePayload_DestCell(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MovePayload_DestCell::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MovePayload_DestCell::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cell_index_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, cell_index_) +
               sizeof(Impl_::y_));
}
MovePayload_DestCell::~MovePayload_DestCell() {
  // @@protoc_insertion_point(destructor:chk.payload.MovePayload.DestCell)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovePayload_DestCell::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MovePayload_DestCell::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_._cached_size_),
              false,
          },
          &MovePayload_DestCell::MergeImpl,
          &MovePayload_DestCell::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MovePayload_DestCell::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MovePayload_DestCell_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::MovePayload_DestCell>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 cell_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload_DestCell, _impl_.cell_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.cell_index_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 cell_index = 1;
    {PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.cell_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MovePayload_DestCell::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.MovePayload.DestCell)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.cell_index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.cell_index_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MovePayload_DestCell::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.MovePayload.DestCell)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 cell_index = 1;
  if (this->_internal_cell_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_cell_index(), target);
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.MovePayload.DestCell)
  return target;
}

::size_t MovePayload_DestCell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.MovePayload.DestCell)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 cell_index = 1;
  if (this->_internal_cell_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cell_index());
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MovePayload_DestCell::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovePayload_DestCell*>(&to_msg);
  auto& from = static_cast<const MovePayload_DestCell&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.MovePayload.DestCell)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cell_index() != 0) {
    _this->_impl_.cell_index_ = from._impl_.cell_index_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovePayload_DestCell::CopyFrom(const MovePayload_DestCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.MovePayload.DestCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovePayload_DestCell::InternalSwap(MovePayload_DestCell* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.y_)
      + sizeof(MovePayload_DestCell::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(MovePayload_DestCell, _impl_.cell_index_)>(
          reinterpret_cast<char*>(&_impl_.cell_index_),
          reinterpret_cast<char*>(&other->_impl_.cell_index_));
}

::google::protobuf::Metadata MovePayload_DestCell::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MovePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovePayload, _impl_._has_bits_);
};

MovePayload::MovePayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.MovePayload)
}
inline PROTOBUF_NDEBUG_INLINE MovePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chk::payload::MovePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovePayload::MovePayload(
    ::google::protobuf::Arena* arena,
    const MovePayload& from)
    : ::google::protobuf::Message(arena) {
  MovePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dest_cell_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::chk::payload::MovePayload_DestCell>(
                              arena, *from._impl_.dest_cell_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_team_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, from_team_),
           offsetof(Impl_, source_cell_) -
               offsetof(Impl_, from_team_) +
               sizeof(Impl_::source_cell_));

  // @@protoc_insertion_point(copy_constructor:chk.payload.MovePayload)
}
inline PROTOBUF_NDEBUG_INLINE MovePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MovePayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dest_cell_),
           0,
           offsetof(Impl_, source_cell_) -
               offsetof(Impl_, dest_cell_) +
               sizeof(Impl_::source_cell_));
}
MovePayload::~MovePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.MovePayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovePayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.dest_cell_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MovePayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MovePayload, _impl_._cached_size_),
              false,
          },
          &MovePayload::MergeImpl,
          &MovePayload::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> MovePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovePayload, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MovePayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::MovePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chk.payload.MovePayload.DestCell dest_cell = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.dest_cell_)}},
    // .chk.payload.TeamColor from_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload, _impl_.from_team_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.from_team_)}},
    // int32 piece_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload, _impl_.piece_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.piece_id_)}},
    // int32 source_cell = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload, _impl_.source_cell_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.source_cell_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor from_team = 1;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.from_team_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 piece_id = 2;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.piece_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 source_cell = 3;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.source_cell_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .chk.payload.MovePayload.DestCell dest_cell = 4;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.dest_cell_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chk::payload::MovePayload_DestCell>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MovePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.MovePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.dest_cell_ != nullptr);
    _impl_.dest_cell_->Clear();
  }
  ::memset(&_impl_.from_team_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.source_cell_) -
      reinterpret_cast<char*>(&_impl_.from_team_)) + sizeof(_impl_.source_cell_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MovePayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.MovePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if (this->_internal_from_team() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_from_team(), target);
  }

  // int32 piece_id = 2;
  if (this->_internal_piece_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_piece_id(), target);
  }

  // int32 source_cell = 3;
  if (this->_internal_source_cell() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_source_cell(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .chk.payload.MovePayload.DestCell dest_cell = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.dest_cell_, _impl_.dest_cell_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.MovePayload)
  return target;
}

::size_t MovePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.MovePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .chk.payload.MovePayload.DestCell dest_cell = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dest_cell_);
  }

  // .chk.payload.TeamColor from_team = 1;
  if (this->_internal_from_team() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_from_team());
  }

  // int32 piece_id = 2;
  if (this->_internal_piece_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_piece_id());
  }

  // int32 source_cell = 3;
  if (this->_internal_source_cell() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_source_cell());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MovePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovePayload*>(&to_msg);
  auto& from = static_cast<const MovePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.MovePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.dest_cell_ != nullptr);
    if (_this->_impl_.dest_cell_ == nullptr) {
      _this->_impl_.dest_cell_ =
          ::google::protobuf::Message::CopyConstruct<::chk::payload::MovePayload_DestCell>(arena, *from._impl_.dest_cell_);
    } else {
      _this->_impl_.dest_cell_->MergeFrom(*from._impl_.dest_cell_);
    }
  }
  if (from._internal_from_team() != 0) {
    _this->_impl_.from_team_ = from._impl_.from_team_;
  }
  if (from._internal_piece_id() != 0) {
    _this->_impl_.piece_id_ = from._impl_.piece_id_;
  }
  if (from._internal_source_cell() != 0) {
    _this->_impl_.source_cell_ = from._impl_.source_cell_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovePayload::CopyFrom(const MovePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.MovePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovePayload::InternalSwap(MovePayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.source_cell_)
      + sizeof(MovePayload::_impl_.source_cell_)
      - PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.dest_cell_)>(
          reinterpret_cast<char*>(&_impl_.dest_cell_),
          reinterpret_cast<char*>(&other->_impl_.dest_cell_));
}

::google::protobuf::Metadata MovePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExitPayload::_Internal {
 public:
};

ExitPayload::ExitPayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.ExitPayload)
}
ExitPayload::ExitPayload(
    ::google::protobuf::Arena* arena, const ExitPayload& from)
    : ExitPayload(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ExitPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExitPayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.from_team_ = {};
}
ExitPayload::~ExitPayload() {
  // @@protoc_insertion_point(destructor:chk.payload.ExitPayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExitPayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ExitPayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_._cached_size_),
              false,
          },
          &ExitPayload::MergeImpl,
          &ExitPayload::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ExitPayload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ExitPayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::ExitPayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chk.payload.TeamColor from_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExitPayload, _impl_.from_team_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_.from_team_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor from_team = 1;
    {PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_.from_team_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ExitPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.ExitPayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_team_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ExitPayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.ExitPayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if (this->_internal_from_team() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_from_team(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.ExitPayload)
  return target;
}

::size_t ExitPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.ExitPayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if (this->_internal_from_team() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_from_team());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExitPayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExitPayload*>(&to_msg);
  auto& from = static_cast<const ExitPayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.ExitPayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_from_team() != 0) {
    _this->_impl_.from_team_ = from._impl_.from_team_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExitPayload::CopyFrom(const ExitPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.ExitPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExitPayload::InternalSwap(ExitPayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.from_team_, other->_impl_.from_team_);
}

::google::protobuf::Metadata ExitPayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CapturePayload_TargetDetails::_Internal {
 public:
};

CapturePayload_TargetDetails::CapturePayload_TargetDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.CapturePayload.TargetDetails)
}
CapturePayload_TargetDetails::CapturePayload_TargetDetails(
    ::google::protobuf::Arena* arena, const CapturePayload_TargetDetails& from)
    : CapturePayload_TargetDetails(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CapturePayload_TargetDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CapturePayload_TargetDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prey_piece_id_),
           0,
           offsetof(Impl_, hunter_next_cell_) -
               offsetof(Impl_, prey_piece_id_) +
               sizeof(Impl_::hunter_next_cell_));
}
CapturePayload_TargetDetails::~CapturePayload_TargetDetails() {
  // @@protoc_insertion_point(destructor:chk.payload.CapturePayload.TargetDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapturePayload_TargetDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CapturePayload_TargetDetails::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_._cached_size_),
              false,
          },
          &CapturePayload_TargetDetails::MergeImpl,
          &CapturePayload_TargetDetails::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CapturePayload_TargetDetails::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CapturePayload_TargetDetails_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::CapturePayload_TargetDetails>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 prey_piece_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_TargetDetails, _impl_.prey_piece_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_piece_id_)}},
    // int32 prey_cell_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_TargetDetails, _impl_.prey_cell_idx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_cell_idx_)}},
    // int32 hunter_next_cell = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_TargetDetails, _impl_.hunter_next_cell_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.hunter_next_cell_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 prey_piece_id = 1;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_piece_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 prey_cell_idx = 2;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_cell_idx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 hunter_next_cell = 3;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.hunter_next_cell_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CapturePayload_TargetDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.CapturePayload.TargetDetails)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.prey_piece_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hunter_next_cell_) -
      reinterpret_cast<char*>(&_impl_.prey_piece_id_)) + sizeof(_impl_.hunter_next_cell_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CapturePayload_TargetDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.CapturePayload.TargetDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 prey_piece_id = 1;
  if (this->_internal_prey_piece_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_prey_piece_id(), target);
  }

  // int32 prey_cell_idx = 2;
  if (this->_internal_prey_cell_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_prey_cell_idx(), target);
  }

  // int32 hunter_next_cell = 3;
  if (this->_internal_hunter_next_cell() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_hunter_next_cell(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.CapturePayload.TargetDetails)
  return target;
}

::size_t CapturePayload_TargetDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.CapturePayload.TargetDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 prey_piece_id = 1;
  if (this->_internal_prey_piece_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prey_piece_id());
  }

  // int32 prey_cell_idx = 2;
  if (this->_internal_prey_cell_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prey_cell_idx());
  }

  // int32 hunter_next_cell = 3;
  if (this->_internal_hunter_next_cell() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hunter_next_cell());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CapturePayload_TargetDetails::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CapturePayload_TargetDetails*>(&to_msg);
  auto& from = static_cast<const CapturePayload_TargetDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.CapturePayload.TargetDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_prey_piece_id() != 0) {
    _this->_impl_.prey_piece_id_ = from._impl_.prey_piece_id_;
  }
  if (from._internal_prey_cell_idx() != 0) {
    _this->_impl_.prey_cell_idx_ = from._impl_.prey_cell_idx_;
  }
  if (from._internal_hunter_next_cell() != 0) {
    _this->_impl_.hunter_next_cell_ = from._impl_.hunter_next_cell_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapturePayload_TargetDetails::CopyFrom(const CapturePayload_TargetDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.CapturePayload.TargetDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CapturePayload_TargetDetails::InternalSwap(CapturePayload_TargetDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.hunter_next_cell_)
      + sizeof(CapturePayload_TargetDetails::_impl_.hunter_next_cell_)
      - PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_piece_id_)>(
          reinterpret_cast<char*>(&_impl_.prey_piece_id_),
          reinterpret_cast<char*>(&other->_impl_.prey_piece_id_));
}

::google::protobuf::Metadata CapturePayload_TargetDetails::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CapturePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CapturePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_._has_bits_);
};

CapturePayload::CapturePayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.CapturePayload)
}
inline PROTOBUF_NDEBUG_INLINE CapturePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chk::payload::CapturePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CapturePayload::CapturePayload(
    ::google::protobuf::Arena* arena,
    const CapturePayload& from)
    : ::google::protobuf::Message(arena) {
  CapturePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.details_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::chk::payload::CapturePayload_TargetDetails>(
                              arena, *from._impl_.details_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_team_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, from_team_),
           offsetof(Impl_, hunter_piece_id_) -
               offsetof(Impl_, from_team_) +
               sizeof(Impl_::hunter_piece_id_));

  // @@protoc_insertion_point(copy_constructor:chk.payload.CapturePayload)
}
inline PROTOBUF_NDEBUG_INLINE CapturePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CapturePayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, details_),
           0,
           offsetof(Impl_, hunter_piece_id_) -
               offsetof(Impl_, details_) +
               sizeof(Impl_::hunter_piece_id_));
}
CapturePayload::~CapturePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.CapturePayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapturePayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.details_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CapturePayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_._cached_size_),
              false,
          },
          &CapturePayload::MergeImpl,
          &CapturePayload::kDescriptorMethods,
          &descriptor_table_base_5fpayload_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CapturePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CapturePayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::CapturePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .chk.payload.TeamColor from_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload, _impl_.from_team_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.from_team_)}},
    // int32 hunter_piece_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload, _impl_.hunter_piece_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.hunter_piece_id_)}},
    // .chk.payload.CapturePayload.TargetDetails details = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.details_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor from_team = 1;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.from_team_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 hunter_piece_id = 2;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.hunter_piece_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .chk.payload.CapturePayload.TargetDetails details = 3;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.details_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chk::payload::CapturePayload_TargetDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CapturePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.CapturePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.details_ != nullptr);
    _impl_.details_->Clear();
  }
  ::memset(&_impl_.from_team_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hunter_piece_id_) -
      reinterpret_cast<char*>(&_impl_.from_team_)) + sizeof(_impl_.hunter_piece_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CapturePayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.CapturePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if (this->_internal_from_team() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_from_team(), target);
  }

  // int32 hunter_piece_id = 2;
  if (this->_internal_hunter_piece_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_hunter_piece_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .chk.payload.CapturePayload.TargetDetails details = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.details_, _impl_.details_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.CapturePayload)
  return target;
}

::size_t CapturePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chk.payload.CapturePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .chk.payload.CapturePayload.TargetDetails details = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.details_);
  }

  // .chk.payload.TeamColor from_team = 1;
  if (this->_internal_from_team() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_from_team());
  }

  // int32 hunter_piece_id = 2;
  if (this->_internal_hunter_piece_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hunter_piece_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CapturePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CapturePayload*>(&to_msg);
  auto& from = static_cast<const CapturePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.CapturePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.details_ != nullptr);
    if (_this->_impl_.details_ == nullptr) {
      _this->_impl_.details_ =
          ::google::protobuf::Message::CopyConstruct<::chk::payload::CapturePayload_TargetDetails>(arena, *from._impl_.details_);
    } else {
      _this->_impl_.details_->MergeFrom(*from._impl_.details_);
    }
  }
  if (from._internal_from_team() != 0) {
    _this->_impl_.from_team_ = from._impl_.from_team_;
  }
  if (from._internal_hunter_piece_id() != 0) {
    _this->_impl_.hunter_piece_id_ = from._impl_.hunter_piece_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapturePayload::CopyFrom(const CapturePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.CapturePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CapturePayload::InternalSwap(CapturePayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.hunter_piece_id_)
      + sizeof(CapturePayload::_impl_.hunter_piece_id_)
      - PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.details_)>(
          reinterpret_cast<char*>(&_impl_.details_),
          reinterpret_cast<char*>(&other->_impl_.details_));
}

::google::protobuf::Metadata CapturePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace payload
}  // namespace chk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_base_5fpayload_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
// clang-format on