// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base_payload.proto
// Protobuf C++ Version: 6.30.1
// clang-format off

#include "base_payload.pb.hpp"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chk {
namespace payload {

inline constexpr WinLosePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winner_{static_cast< ::chk::payload::TeamColor >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR WinLosePayload::WinLosePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WinLosePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WinLosePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WinLosePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WinLosePayloadDefaultTypeInternal() {}
  union {
    WinLosePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WinLosePayloadDefaultTypeInternal _WinLosePayload_default_instance_;

inline constexpr WelcomePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        server_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        my_team_{static_cast< ::chk::payload::TeamColor >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR WelcomePayload::WelcomePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WelcomePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WelcomePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WelcomePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WelcomePayloadDefaultTypeInternal() {}
  union {
    WelcomePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WelcomePayloadDefaultTypeInternal _WelcomePayload_default_instance_;

inline constexpr StartPayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pieces_red_{},
        _pieces_red_cached_byte_size_{0},
        pieces_black_{},
        _pieces_black_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartPayload::StartPayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StartPayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StartPayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartPayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartPayloadDefaultTypeInternal() {}
  union {
    StartPayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartPayloadDefaultTypeInternal _StartPayload_default_instance_;

inline constexpr MovePayload_Detination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cell_index_{0},
        x_{0},
        y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MovePayload_Detination::MovePayload_Detination(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MovePayload_Detination_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovePayload_DetinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovePayload_DetinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovePayload_DetinationDefaultTypeInternal() {}
  union {
    MovePayload_Detination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovePayload_DetinationDefaultTypeInternal _MovePayload_Detination_default_instance_;

inline constexpr ExitPayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        from_team_{static_cast< ::chk::payload::TeamColor >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ExitPayload::ExitPayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExitPayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExitPayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExitPayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExitPayloadDefaultTypeInternal() {}
  union {
    ExitPayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExitPayloadDefaultTypeInternal _ExitPayload_default_instance_;

inline constexpr CapturePayload_TargetDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prey_piece_id_{0},
        prey_cell_idx_{0},
        hunter_src_cell_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CapturePayload_TargetDetails::CapturePayload_TargetDetails(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CapturePayload_TargetDetails_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CapturePayload_TargetDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapturePayload_TargetDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapturePayload_TargetDetailsDefaultTypeInternal() {}
  union {
    CapturePayload_TargetDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapturePayload_TargetDetailsDefaultTypeInternal _CapturePayload_TargetDetails_default_instance_;

inline constexpr CapturePayload_HunterDestination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cell_index_{0},
        x_{0},
        y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CapturePayload_HunterDestination::CapturePayload_HunterDestination(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CapturePayload_HunterDestination_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CapturePayload_HunterDestinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapturePayload_HunterDestinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapturePayload_HunterDestinationDefaultTypeInternal() {}
  union {
    CapturePayload_HunterDestination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapturePayload_HunterDestinationDefaultTypeInternal _CapturePayload_HunterDestination_default_instance_;

inline constexpr MovePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        destination_{nullptr},
        from_team_{static_cast< ::chk::payload::TeamColor >(0)},
        piece_id_{0},
        source_cell_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MovePayload::MovePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MovePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovePayloadDefaultTypeInternal() {}
  union {
    MovePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovePayloadDefaultTypeInternal _MovePayload_default_instance_;

inline constexpr CapturePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        details_{nullptr},
        destination_{nullptr},
        from_team_{static_cast< ::chk::payload::TeamColor >(0)},
        hunter_piece_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CapturePayload::CapturePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CapturePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CapturePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapturePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapturePayloadDefaultTypeInternal() {}
  union {
    CapturePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapturePayloadDefaultTypeInternal _CapturePayload_default_instance_;

inline constexpr BasePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        notice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inner_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BasePayload::BasePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BasePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BasePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BasePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BasePayloadDefaultTypeInternal() {}
  union {
    BasePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BasePayloadDefaultTypeInternal _BasePayload_default_instance_;
}  // namespace payload
}  // namespace chk
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_base_5fpayload_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_base_5fpayload_2eproto = nullptr;
const ::uint32_t
    TableStruct_base_5fpayload_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_.notice_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_.inner_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _impl_.my_team_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::WelcomePayload, _impl_.server_version_),
        1,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chk::payload::StartPayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::StartPayload, _impl_.pieces_red_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::StartPayload, _impl_.pieces_black_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_Detination, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_Detination, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_Detination, _impl_.cell_index_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_Detination, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload_Detination, _impl_.y_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.from_team_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.piece_id_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.source_cell_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::MovePayload, _impl_.destination_),
        1,
        2,
        3,
        0,
        PROTOBUF_FIELD_OFFSET(::chk::payload::ExitPayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::ExitPayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::ExitPayload, _impl_.from_team_),
        0,
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_.prey_piece_id_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_.prey_cell_idx_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_TargetDetails, _impl_.hunter_src_cell_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_HunterDestination, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_HunterDestination, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_HunterDestination, _impl_.cell_index_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_HunterDestination, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload_HunterDestination, _impl_.y_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.from_team_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.hunter_piece_id_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::CapturePayload, _impl_.destination_),
        2,
        3,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::chk::payload::WinLosePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chk::payload::WinLosePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chk::payload::WinLosePayload, _impl_.winner_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::chk::payload::BasePayload)},
        {23, 33, -1, sizeof(::chk::payload::WelcomePayload)},
        {35, -1, -1, sizeof(::chk::payload::StartPayload)},
        {45, 56, -1, sizeof(::chk::payload::MovePayload_Detination)},
        {59, 71, -1, sizeof(::chk::payload::MovePayload)},
        {75, 84, -1, sizeof(::chk::payload::ExitPayload)},
        {85, 96, -1, sizeof(::chk::payload::CapturePayload_TargetDetails)},
        {99, 110, -1, sizeof(::chk::payload::CapturePayload_HunterDestination)},
        {113, 125, -1, sizeof(::chk::payload::CapturePayload)},
        {129, 138, -1, sizeof(::chk::payload::WinLosePayload)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::chk::payload::_BasePayload_default_instance_._instance,
    &::chk::payload::_WelcomePayload_default_instance_._instance,
    &::chk::payload::_StartPayload_default_instance_._instance,
    &::chk::payload::_MovePayload_Detination_default_instance_._instance,
    &::chk::payload::_MovePayload_default_instance_._instance,
    &::chk::payload::_ExitPayload_default_instance_._instance,
    &::chk::payload::_CapturePayload_TargetDetails_default_instance_._instance,
    &::chk::payload::_CapturePayload_HunterDestination_default_instance_._instance,
    &::chk::payload::_CapturePayload_default_instance_._instance,
    &::chk::payload::_WinLosePayload_default_instance_._instance,
};
const char descriptor_table_protodef_base_5fpayload_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022base_payload.proto\022\013chk.payload\"\326\002\n\013Ba"
    "sePayload\022\016\n\006notice\030\002 \001(\t\022.\n\007welcome\030\003 \001"
    "(\0132\033.chk.payload.WelcomePayloadH\000\0220\n\014mov"
    "e_payload\030\004 \001(\0132\030.chk.payload.MovePayloa"
    "dH\000\022*\n\005start\030\005 \001(\0132\031.chk.payload.StartPa"
    "yloadH\000\0220\n\014exit_payload\030\006 \001(\0132\030.chk.payl"
    "oad.ExitPayloadH\000\0226\n\017capture_payload\030\007 \001"
    "(\0132\033.chk.payload.CapturePayloadH\000\0226\n\017win"
    "lose_payload\030\010 \001(\0132\033.chk.payload.WinLose"
    "PayloadH\000B\007\n\005inner\"Q\n\016WelcomePayload\022\'\n\007"
    "my_team\030\001 \001(\0162\026.chk.payload.TeamColor\022\026\n"
    "\016server_version\030\002 \001(\t\"8\n\014StartPayload\022\022\n"
    "\npieces_red\030\001 \003(\005\022\024\n\014pieces_black\030\002 \003(\005\""
    "\321\001\n\013MovePayload\022)\n\tfrom_team\030\001 \001(\0162\026.chk"
    ".payload.TeamColor\022\020\n\010piece_id\030\002 \001(\005\022\023\n\013"
    "source_cell\030\003 \001(\005\0228\n\013destination\030\004 \001(\0132#"
    ".chk.payload.MovePayload.Detination\0326\n\nD"
    "etination\022\022\n\ncell_index\030\001 \001(\005\022\t\n\001x\030\002 \001(\002"
    "\022\t\n\001y\030\003 \001(\002\"8\n\013ExitPayload\022)\n\tfrom_team\030"
    "\001 \001(\0162\026.chk.payload.TeamColor\"\353\002\n\016Captur"
    "ePayload\022)\n\tfrom_team\030\001 \001(\0162\026.chk.payloa"
    "d.TeamColor\022\027\n\017hunter_piece_id\030\002 \001(\005\022:\n\007"
    "details\030\004 \001(\0132).chk.payload.CapturePaylo"
    "ad.TargetDetails\022B\n\013destination\030\005 \001(\0132-."
    "chk.payload.CapturePayload.HunterDestina"
    "tion\032V\n\rTargetDetails\022\025\n\rprey_piece_id\030\001"
    " \001(\005\022\025\n\rprey_cell_idx\030\002 \001(\005\022\027\n\017hunter_sr"
    "c_cell\030\003 \001(\005\032=\n\021HunterDestination\022\022\n\ncel"
    "l_index\030\001 \001(\005\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\"8\n\016W"
    "inLosePayload\022&\n\006winner\030\001 \001(\0162\026.chk.payl"
    "oad.TeamColor*\?\n\tTeamColor\022\024\n\020TEAM_UNSPE"
    "CIFIED\020\000\022\014\n\010TEAM_RED\020\001\022\016\n\nTEAM_BLACK\020\002B\027"
    "Z\025checkers-backend/gameb\006proto3"
};
static ::absl::once_flag descriptor_table_base_5fpayload_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_base_5fpayload_2eproto = {
    false,
    false,
    1311,
    descriptor_table_protodef_base_5fpayload_2eproto,
    "base_payload.proto",
    &descriptor_table_base_5fpayload_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_base_5fpayload_2eproto::offsets,
    file_level_enum_descriptors_base_5fpayload_2eproto,
    file_level_service_descriptors_base_5fpayload_2eproto,
};
namespace chk {
namespace payload {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TeamColor_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_base_5fpayload_2eproto);
  return file_level_enum_descriptors_base_5fpayload_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TeamColor_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class BasePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BasePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BasePayload, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::chk::payload::BasePayload, _impl_._oneof_case_);
};

void BasePayload::set_allocated_welcome(::chk::payload::WelcomePayload* PROTOBUF_NULLABLE welcome) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (welcome) {
    ::google::protobuf::Arena* submessage_arena = welcome->GetArena();
    if (message_arena != submessage_arena) {
      welcome = ::google::protobuf::internal::GetOwnedMessage(message_arena, welcome, submessage_arena);
    }
    set_has_welcome();
    _impl_.inner_.welcome_ = welcome;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.welcome)
}
void BasePayload::set_allocated_move_payload(::chk::payload::MovePayload* PROTOBUF_NULLABLE move_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (move_payload) {
    ::google::protobuf::Arena* submessage_arena = move_payload->GetArena();
    if (message_arena != submessage_arena) {
      move_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, move_payload, submessage_arena);
    }
    set_has_move_payload();
    _impl_.inner_.move_payload_ = move_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.move_payload)
}
void BasePayload::set_allocated_start(::chk::payload::StartPayload* PROTOBUF_NULLABLE start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.inner_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.start)
}
void BasePayload::set_allocated_exit_payload(::chk::payload::ExitPayload* PROTOBUF_NULLABLE exit_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (exit_payload) {
    ::google::protobuf::Arena* submessage_arena = exit_payload->GetArena();
    if (message_arena != submessage_arena) {
      exit_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, exit_payload, submessage_arena);
    }
    set_has_exit_payload();
    _impl_.inner_.exit_payload_ = exit_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.exit_payload)
}
void BasePayload::set_allocated_capture_payload(::chk::payload::CapturePayload* PROTOBUF_NULLABLE capture_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (capture_payload) {
    ::google::protobuf::Arena* submessage_arena = capture_payload->GetArena();
    if (message_arena != submessage_arena) {
      capture_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, capture_payload, submessage_arena);
    }
    set_has_capture_payload();
    _impl_.inner_.capture_payload_ = capture_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.capture_payload)
}
void BasePayload::set_allocated_winlose_payload(::chk::payload::WinLosePayload* PROTOBUF_NULLABLE winlose_payload) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_inner();
  if (winlose_payload) {
    ::google::protobuf::Arena* submessage_arena = winlose_payload->GetArena();
    if (message_arena != submessage_arena) {
      winlose_payload = ::google::protobuf::internal::GetOwnedMessage(message_arena, winlose_payload, submessage_arena);
    }
    set_has_winlose_payload();
    _impl_.inner_.winlose_payload_ = winlose_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:chk.payload.BasePayload.winlose_payload)
}
BasePayload::BasePayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BasePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.BasePayload)
}
PROTOBUF_NDEBUG_INLINE BasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chk::payload::BasePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        notice_(arena, from.notice_),
        inner_{},
        _oneof_case_{from._oneof_case_[0]} {}

BasePayload::BasePayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BasePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BasePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BasePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (inner_case()) {
    case INNER_NOT_SET:
      break;
      case kWelcome:
        _impl_.inner_.welcome_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.welcome_);
        break;
      case kMovePayload:
        _impl_.inner_.move_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.move_payload_);
        break;
      case kStart:
        _impl_.inner_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.start_);
        break;
      case kExitPayload:
        _impl_.inner_.exit_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.exit_payload_);
        break;
      case kCapturePayload:
        _impl_.inner_.capture_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.capture_payload_);
        break;
      case kWinlosePayload:
        _impl_.inner_.winlose_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.winlose_payload_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:chk.payload.BasePayload)
}
PROTOBUF_NDEBUG_INLINE BasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        notice_(arena),
        inner_{},
        _oneof_case_{} {}

inline void BasePayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BasePayload::~BasePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.BasePayload)
  SharedDtor(*this);
}
inline void BasePayload::SharedDtor(MessageLite& self) {
  BasePayload& this_ = static_cast<BasePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.notice_.Destroy();
  if (this_.has_inner()) {
    this_.clear_inner();
  }
  this_._impl_.~Impl_();
}

void BasePayload::clear_inner() {
// @@protoc_insertion_point(one_of_clear_start:chk.payload.BasePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (inner_case()) {
    case kWelcome: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.welcome_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.welcome_);
      }
      break;
    }
    case kMovePayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.move_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.move_payload_);
      }
      break;
    }
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.start_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.start_);
      }
      break;
    }
    case kExitPayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.exit_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.exit_payload_);
      }
      break;
    }
    case kCapturePayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.capture_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.capture_payload_);
      }
      break;
    }
    case kWinlosePayload: {
      if (GetArena() == nullptr) {
        delete _impl_.inner_.winlose_payload_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.inner_.winlose_payload_);
      }
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INNER_NOT_SET;
}


inline void* PROTOBUF_NONNULL BasePayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BasePayload(arena);
}
constexpr auto BasePayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BasePayload),
                                            alignof(BasePayload));
}
constexpr auto BasePayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BasePayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BasePayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BasePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BasePayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BasePayload>(), &BasePayload::ByteSizeLong,
              &BasePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BasePayload, _impl_._cached_size_),
          false,
      },
      &BasePayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        BasePayload_class_data_ =
            BasePayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL BasePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BasePayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BasePayload_class_data_.tc_table);
  return BasePayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 6, 38, 2>
BasePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BasePayload, _impl_._has_bits_),
    0, // no _extensions_
    8, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967041,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BasePayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::BasePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string notice = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.notice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string notice = 2;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.notice_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chk.payload.WelcomePayload welcome = 3;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.welcome_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.MovePayload move_payload = 4;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.move_payload_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.StartPayload start = 5;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.start_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.ExitPayload exit_payload = 6;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.exit_payload_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.CapturePayload capture_payload = 7;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.capture_payload_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.WinLosePayload winlose_payload = 8;
    {PROTOBUF_FIELD_OFFSET(BasePayload, _impl_.inner_.winlose_payload_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::chk::payload::WelcomePayload>()},
      {::_pbi::TcParser::GetTable<::chk::payload::MovePayload>()},
      {::_pbi::TcParser::GetTable<::chk::payload::StartPayload>()},
      {::_pbi::TcParser::GetTable<::chk::payload::ExitPayload>()},
      {::_pbi::TcParser::GetTable<::chk::payload::CapturePayload>()},
      {::_pbi::TcParser::GetTable<::chk::payload::WinLosePayload>()},
  }},
  {{
    "\27\6\0\0\0\0\0\0"
    "chk.payload.BasePayload"
    "notice"
  }},
};
PROTOBUF_NOINLINE void BasePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.BasePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.notice_.ClearNonDefaultToEmpty();
  }
  clear_inner();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BasePayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BasePayload& this_ = static_cast<const BasePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BasePayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BasePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.BasePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string notice = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_notice().empty()) {
      const std::string& _s = this_._internal_notice();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chk.payload.BasePayload.notice");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  switch (this_.inner_case()) {
    case kWelcome: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.inner_.welcome_, this_._impl_.inner_.welcome_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMovePayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.inner_.move_payload_, this_._impl_.inner_.move_payload_->GetCachedSize(), target,
          stream);
      break;
    }
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.inner_.start_, this_._impl_.inner_.start_->GetCachedSize(), target,
          stream);
      break;
    }
    case kExitPayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.inner_.exit_payload_, this_._impl_.inner_.exit_payload_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCapturePayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.inner_.capture_payload_, this_._impl_.inner_.capture_payload_->GetCachedSize(), target,
          stream);
      break;
    }
    case kWinlosePayload: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.inner_.winlose_payload_, this_._impl_.inner_.winlose_payload_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.BasePayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BasePayload::ByteSizeLong(const MessageLite& base) {
  const BasePayload& this_ = static_cast<const BasePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BasePayload::ByteSizeLong() const {
  const BasePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.BasePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string notice = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_notice().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_notice());
      }
    }
  }
  switch (this_.inner_case()) {
    // .chk.payload.WelcomePayload welcome = 3;
    case kWelcome: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_.welcome_);
      break;
    }
    // .chk.payload.MovePayload move_payload = 4;
    case kMovePayload: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_.move_payload_);
      break;
    }
    // .chk.payload.StartPayload start = 5;
    case kStart: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_.start_);
      break;
    }
    // .chk.payload.ExitPayload exit_payload = 6;
    case kExitPayload: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_.exit_payload_);
      break;
    }
    // .chk.payload.CapturePayload capture_payload = 7;
    case kCapturePayload: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_.capture_payload_);
      break;
    }
    // .chk.payload.WinLosePayload winlose_payload = 8;
    case kWinlosePayload: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inner_.winlose_payload_);
      break;
    }
    case INNER_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BasePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BasePayload*>(&to_msg);
  auto& from = static_cast<const BasePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.BasePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_notice().empty()) {
      _this->_internal_set_notice(from._internal_notice());
    } else {
      if (_this->_impl_.notice_.IsDefault()) {
        _this->_internal_set_notice("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_inner();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWelcome: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.welcome_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.welcome_);
        } else {
          _this->_impl_.inner_.welcome_->MergeFrom(*from._impl_.inner_.welcome_);
        }
        break;
      }
      case kMovePayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.move_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.move_payload_);
        } else {
          _this->_impl_.inner_.move_payload_->MergeFrom(*from._impl_.inner_.move_payload_);
        }
        break;
      }
      case kStart: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.start_);
        } else {
          _this->_impl_.inner_.start_->MergeFrom(*from._impl_.inner_.start_);
        }
        break;
      }
      case kExitPayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.exit_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.exit_payload_);
        } else {
          _this->_impl_.inner_.exit_payload_->MergeFrom(*from._impl_.inner_.exit_payload_);
        }
        break;
      }
      case kCapturePayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.capture_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.capture_payload_);
        } else {
          _this->_impl_.inner_.capture_payload_->MergeFrom(*from._impl_.inner_.capture_payload_);
        }
        break;
      }
      case kWinlosePayload: {
        if (oneof_needs_init) {
          _this->_impl_.inner_.winlose_payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inner_.winlose_payload_);
        } else {
          _this->_impl_.inner_.winlose_payload_->MergeFrom(*from._impl_.inner_.winlose_payload_);
        }
        break;
      }
      case INNER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BasePayload::CopyFrom(const BasePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.BasePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BasePayload::InternalSwap(BasePayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notice_, &other->_impl_.notice_, arena);
  swap(_impl_.inner_, other->_impl_.inner_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BasePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WelcomePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WelcomePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_._has_bits_);
};

WelcomePayload::WelcomePayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WelcomePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.WelcomePayload)
}
PROTOBUF_NDEBUG_INLINE WelcomePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chk::payload::WelcomePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        server_version_(arena, from.server_version_) {}

WelcomePayload::WelcomePayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WelcomePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WelcomePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WelcomePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.my_team_ = from._impl_.my_team_;

  // @@protoc_insertion_point(copy_constructor:chk.payload.WelcomePayload)
}
PROTOBUF_NDEBUG_INLINE WelcomePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        server_version_(arena) {}

inline void WelcomePayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.my_team_ = {};
}
WelcomePayload::~WelcomePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.WelcomePayload)
  SharedDtor(*this);
}
inline void WelcomePayload::SharedDtor(MessageLite& self) {
  WelcomePayload& this_ = static_cast<WelcomePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.server_version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WelcomePayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WelcomePayload(arena);
}
constexpr auto WelcomePayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WelcomePayload),
                                            alignof(WelcomePayload));
}
constexpr auto WelcomePayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WelcomePayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WelcomePayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WelcomePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WelcomePayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WelcomePayload>(), &WelcomePayload::ByteSizeLong,
              &WelcomePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_._cached_size_),
          false,
      },
      &WelcomePayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WelcomePayload_class_data_ =
            WelcomePayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WelcomePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WelcomePayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WelcomePayload_class_data_.tc_table);
  return WelcomePayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2>
WelcomePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WelcomePayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::WelcomePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string server_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.server_version_)}},
    // .chk.payload.TeamColor my_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WelcomePayload, _impl_.my_team_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.my_team_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor my_team = 1;
    {PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.my_team_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string server_version = 2;
    {PROTOBUF_FIELD_OFFSET(WelcomePayload, _impl_.server_version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\16\0\0\0\0\0"
    "chk.payload.WelcomePayload"
    "server_version"
  }},
};
PROTOBUF_NOINLINE void WelcomePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.WelcomePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.server_version_.ClearNonDefaultToEmpty();
  }
  _impl_.my_team_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WelcomePayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WelcomePayload& this_ = static_cast<const WelcomePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WelcomePayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WelcomePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.WelcomePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor my_team = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_my_team() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_my_team(), target);
    }
  }

  // string server_version = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_server_version().empty()) {
      const std::string& _s = this_._internal_server_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chk.payload.WelcomePayload.server_version");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.WelcomePayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WelcomePayload::ByteSizeLong(const MessageLite& base) {
  const WelcomePayload& this_ = static_cast<const WelcomePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WelcomePayload::ByteSizeLong() const {
  const WelcomePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.WelcomePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string server_version = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_server_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_server_version());
      }
    }
    // .chk.payload.TeamColor my_team = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_my_team() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_my_team());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WelcomePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WelcomePayload*>(&to_msg);
  auto& from = static_cast<const WelcomePayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.WelcomePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_server_version().empty()) {
        _this->_internal_set_server_version(from._internal_server_version());
      } else {
        if (_this->_impl_.server_version_.IsDefault()) {
          _this->_internal_set_server_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_my_team() != 0) {
        _this->_impl_.my_team_ = from._impl_.my_team_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WelcomePayload::CopyFrom(const WelcomePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.WelcomePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WelcomePayload::InternalSwap(WelcomePayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_version_, &other->_impl_.server_version_, arena);
  swap(_impl_.my_team_, other->_impl_.my_team_);
}

::google::protobuf::Metadata WelcomePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StartPayload::_Internal {
 public:
};

StartPayload::StartPayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StartPayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.StartPayload)
}
PROTOBUF_NDEBUG_INLINE StartPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chk::payload::StartPayload& from_msg)
      : pieces_red_{visibility, arena, from.pieces_red_},
        _pieces_red_cached_byte_size_{0},
        pieces_black_{visibility, arena, from.pieces_black_},
        _pieces_black_cached_byte_size_{0},
        _cached_size_{0} {}

StartPayload::StartPayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StartPayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StartPayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StartPayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chk.payload.StartPayload)
}
PROTOBUF_NDEBUG_INLINE StartPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : pieces_red_{visibility, arena},
        _pieces_red_cached_byte_size_{0},
        pieces_black_{visibility, arena},
        _pieces_black_cached_byte_size_{0},
        _cached_size_{0} {}

inline void StartPayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StartPayload::~StartPayload() {
  // @@protoc_insertion_point(destructor:chk.payload.StartPayload)
  SharedDtor(*this);
}
inline void StartPayload::SharedDtor(MessageLite& self) {
  StartPayload& this_ = static_cast<StartPayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StartPayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StartPayload(arena);
}
constexpr auto StartPayload::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_red_) +
          decltype(StartPayload::_impl_.pieces_red_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_black_) +
          decltype(StartPayload::_impl_.pieces_black_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StartPayload), alignof(StartPayload), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StartPayload::PlacementNew_,
                                 sizeof(StartPayload),
                                 alignof(StartPayload));
  }
}
constexpr auto StartPayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StartPayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StartPayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StartPayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StartPayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StartPayload>(), &StartPayload::ByteSizeLong,
              &StartPayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StartPayload, _impl_._cached_size_),
          false,
      },
      &StartPayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        StartPayload_class_data_ =
            StartPayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL StartPayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StartPayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StartPayload_class_data_.tc_table);
  return StartPayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
StartPayload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StartPayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::StartPayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 pieces_black = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_black_)}},
    // repeated int32 pieces_red = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_red_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 pieces_red = 1;
    {PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_red_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 pieces_black = 2;
    {PROTOBUF_FIELD_OFFSET(StartPayload, _impl_.pieces_black_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void StartPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.StartPayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pieces_red_.Clear();
  _impl_.pieces_black_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StartPayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StartPayload& this_ = static_cast<const StartPayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StartPayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StartPayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.StartPayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 pieces_red = 1;
  {
    int byte_size = this_._impl_._pieces_red_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, this_._internal_pieces_red(), byte_size, target);
    }
  }

  // repeated int32 pieces_black = 2;
  {
    int byte_size = this_._impl_._pieces_black_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, this_._internal_pieces_black(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.StartPayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StartPayload::ByteSizeLong(const MessageLite& base) {
  const StartPayload& this_ = static_cast<const StartPayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StartPayload::ByteSizeLong() const {
  const StartPayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.StartPayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 pieces_red = 1;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_pieces_red(), 1,
              this_._impl_._pieces_red_cached_byte_size_);
    }
    // repeated int32 pieces_black = 2;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_pieces_black(), 1,
              this_._impl_._pieces_black_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StartPayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StartPayload*>(&to_msg);
  auto& from = static_cast<const StartPayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.StartPayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pieces_red()->MergeFrom(from._internal_pieces_red());
  _this->_internal_mutable_pieces_black()->MergeFrom(from._internal_pieces_black());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartPayload::CopyFrom(const StartPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.StartPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StartPayload::InternalSwap(StartPayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pieces_red_.InternalSwap(&other->_impl_.pieces_red_);
  _impl_.pieces_black_.InternalSwap(&other->_impl_.pieces_black_);
}

::google::protobuf::Metadata StartPayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovePayload_Detination::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MovePayload_Detination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_._has_bits_);
};

MovePayload_Detination::MovePayload_Detination(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovePayload_Detination_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.MovePayload.Detination)
}
MovePayload_Detination::MovePayload_Detination(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MovePayload_Detination& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovePayload_Detination_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MovePayload_Detination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MovePayload_Detination::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cell_index_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, cell_index_) +
               sizeof(Impl_::y_));
}
MovePayload_Detination::~MovePayload_Detination() {
  // @@protoc_insertion_point(destructor:chk.payload.MovePayload.Detination)
  SharedDtor(*this);
}
inline void MovePayload_Detination::SharedDtor(MessageLite& self) {
  MovePayload_Detination& this_ = static_cast<MovePayload_Detination&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MovePayload_Detination::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MovePayload_Detination(arena);
}
constexpr auto MovePayload_Detination::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MovePayload_Detination),
                                            alignof(MovePayload_Detination));
}
constexpr auto MovePayload_Detination::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MovePayload_Detination_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MovePayload_Detination::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MovePayload_Detination>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MovePayload_Detination::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MovePayload_Detination>(), &MovePayload_Detination::ByteSizeLong,
              &MovePayload_Detination::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_._cached_size_),
          false,
      },
      &MovePayload_Detination::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        MovePayload_Detination_class_data_ =
            MovePayload_Detination::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL MovePayload_Detination::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MovePayload_Detination_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MovePayload_Detination_class_data_.tc_table);
  return MovePayload_Detination_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
MovePayload_Detination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MovePayload_Detination_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::MovePayload_Detination>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 cell_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload_Detination, _impl_.cell_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.cell_index_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 cell_index = 1;
    {PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.cell_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.x_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.y_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MovePayload_Detination::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.MovePayload.Detination)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.cell_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.cell_index_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MovePayload_Detination::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MovePayload_Detination& this_ = static_cast<const MovePayload_Detination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MovePayload_Detination::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MovePayload_Detination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.MovePayload.Detination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 cell_index = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_cell_index() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_cell_index(), target);
    }
  }

  // float x = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_x(), target);
    }
  }

  // float y = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_y(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.MovePayload.Detination)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MovePayload_Detination::ByteSizeLong(const MessageLite& base) {
  const MovePayload_Detination& this_ = static_cast<const MovePayload_Detination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MovePayload_Detination::ByteSizeLong() const {
  const MovePayload_Detination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.MovePayload.Detination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // int32 cell_index = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_cell_index() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_cell_index());
      }
    }
    // float x = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
        total_size += 5;
      }
    }
    // float y = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MovePayload_Detination::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovePayload_Detination*>(&to_msg);
  auto& from = static_cast<const MovePayload_Detination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.MovePayload.Detination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_cell_index() != 0) {
        _this->_impl_.cell_index_ = from._impl_.cell_index_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovePayload_Detination::CopyFrom(const MovePayload_Detination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.MovePayload.Detination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovePayload_Detination::InternalSwap(MovePayload_Detination* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.y_)
      + sizeof(MovePayload_Detination::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(MovePayload_Detination, _impl_.cell_index_)>(
          reinterpret_cast<char*>(&_impl_.cell_index_),
          reinterpret_cast<char*>(&other->_impl_.cell_index_));
}

::google::protobuf::Metadata MovePayload_Detination::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MovePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovePayload, _impl_._has_bits_);
};

MovePayload::MovePayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.MovePayload)
}
PROTOBUF_NDEBUG_INLINE MovePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chk::payload::MovePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovePayload::MovePayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MovePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MovePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.destination_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.destination_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_team_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, from_team_),
           offsetof(Impl_, source_cell_) -
               offsetof(Impl_, from_team_) +
               sizeof(Impl_::source_cell_));

  // @@protoc_insertion_point(copy_constructor:chk.payload.MovePayload)
}
PROTOBUF_NDEBUG_INLINE MovePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MovePayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, destination_),
           0,
           offsetof(Impl_, source_cell_) -
               offsetof(Impl_, destination_) +
               sizeof(Impl_::source_cell_));
}
MovePayload::~MovePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.MovePayload)
  SharedDtor(*this);
}
inline void MovePayload::SharedDtor(MessageLite& self) {
  MovePayload& this_ = static_cast<MovePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.destination_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MovePayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MovePayload(arena);
}
constexpr auto MovePayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MovePayload),
                                            alignof(MovePayload));
}
constexpr auto MovePayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MovePayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MovePayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MovePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MovePayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MovePayload>(), &MovePayload::ByteSizeLong,
              &MovePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MovePayload, _impl_._cached_size_),
          false,
      },
      &MovePayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        MovePayload_class_data_ =
            MovePayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL MovePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MovePayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MovePayload_class_data_.tc_table);
  return MovePayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
MovePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovePayload, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MovePayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::MovePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chk.payload.MovePayload.Detination destination = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.destination_)}},
    // .chk.payload.TeamColor from_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload, _impl_.from_team_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.from_team_)}},
    // int32 piece_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload, _impl_.piece_id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.piece_id_)}},
    // int32 source_cell = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovePayload, _impl_.source_cell_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.source_cell_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor from_team = 1;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.from_team_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 piece_id = 2;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.piece_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 source_cell = 3;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.source_cell_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .chk.payload.MovePayload.Detination destination = 4;
    {PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.destination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::chk::payload::MovePayload_Detination>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MovePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.MovePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.destination_ != nullptr);
    _impl_.destination_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.from_team_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.source_cell_) -
        reinterpret_cast<char*>(&_impl_.from_team_)) + sizeof(_impl_.source_cell_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MovePayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MovePayload& this_ = static_cast<const MovePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MovePayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MovePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.MovePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_from_team() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_from_team(), target);
    }
  }

  // int32 piece_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_piece_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_piece_id(), target);
    }
  }

  // int32 source_cell = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_source_cell() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_source_cell(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .chk.payload.MovePayload.Detination destination = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.destination_, this_._impl_.destination_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.MovePayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MovePayload::ByteSizeLong(const MessageLite& base) {
  const MovePayload& this_ = static_cast<const MovePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MovePayload::ByteSizeLong() const {
  const MovePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.MovePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .chk.payload.MovePayload.Detination destination = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.destination_);
    }
    // .chk.payload.TeamColor from_team = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_from_team() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_from_team());
      }
    }
    // int32 piece_id = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_piece_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_piece_id());
      }
    }
    // int32 source_cell = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_source_cell() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_source_cell());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MovePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovePayload*>(&to_msg);
  auto& from = static_cast<const MovePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.MovePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.destination_ != nullptr);
      if (_this->_impl_.destination_ == nullptr) {
        _this->_impl_.destination_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.destination_);
      } else {
        _this->_impl_.destination_->MergeFrom(*from._impl_.destination_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_from_team() != 0) {
        _this->_impl_.from_team_ = from._impl_.from_team_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_piece_id() != 0) {
        _this->_impl_.piece_id_ = from._impl_.piece_id_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_source_cell() != 0) {
        _this->_impl_.source_cell_ = from._impl_.source_cell_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovePayload::CopyFrom(const MovePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.MovePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovePayload::InternalSwap(MovePayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.source_cell_)
      + sizeof(MovePayload::_impl_.source_cell_)
      - PROTOBUF_FIELD_OFFSET(MovePayload, _impl_.destination_)>(
          reinterpret_cast<char*>(&_impl_.destination_),
          reinterpret_cast<char*>(&other->_impl_.destination_));
}

::google::protobuf::Metadata MovePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExitPayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExitPayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_._has_bits_);
};

ExitPayload::ExitPayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExitPayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.ExitPayload)
}
ExitPayload::ExitPayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ExitPayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExitPayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ExitPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ExitPayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.from_team_ = {};
}
ExitPayload::~ExitPayload() {
  // @@protoc_insertion_point(destructor:chk.payload.ExitPayload)
  SharedDtor(*this);
}
inline void ExitPayload::SharedDtor(MessageLite& self) {
  ExitPayload& this_ = static_cast<ExitPayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExitPayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExitPayload(arena);
}
constexpr auto ExitPayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExitPayload),
                                            alignof(ExitPayload));
}
constexpr auto ExitPayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExitPayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExitPayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExitPayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExitPayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExitPayload>(), &ExitPayload::ByteSizeLong,
              &ExitPayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_._cached_size_),
          false,
      },
      &ExitPayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ExitPayload_class_data_ =
            ExitPayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ExitPayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExitPayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExitPayload_class_data_.tc_table);
  return ExitPayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ExitPayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ExitPayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::ExitPayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chk.payload.TeamColor from_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExitPayload, _impl_.from_team_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_.from_team_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor from_team = 1;
    {PROTOBUF_FIELD_OFFSET(ExitPayload, _impl_.from_team_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ExitPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.ExitPayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_team_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExitPayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExitPayload& this_ = static_cast<const ExitPayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExitPayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExitPayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.ExitPayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_from_team() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_from_team(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.ExitPayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExitPayload::ByteSizeLong(const MessageLite& base) {
  const ExitPayload& this_ = static_cast<const ExitPayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExitPayload::ByteSizeLong() const {
  const ExitPayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.ExitPayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .chk.payload.TeamColor from_team = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_from_team() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_from_team());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExitPayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExitPayload*>(&to_msg);
  auto& from = static_cast<const ExitPayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.ExitPayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_from_team() != 0) {
      _this->_impl_.from_team_ = from._impl_.from_team_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExitPayload::CopyFrom(const ExitPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.ExitPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExitPayload::InternalSwap(ExitPayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.from_team_, other->_impl_.from_team_);
}

::google::protobuf::Metadata ExitPayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CapturePayload_TargetDetails::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CapturePayload_TargetDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_._has_bits_);
};

CapturePayload_TargetDetails::CapturePayload_TargetDetails(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CapturePayload_TargetDetails_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.CapturePayload.TargetDetails)
}
CapturePayload_TargetDetails::CapturePayload_TargetDetails(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CapturePayload_TargetDetails& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CapturePayload_TargetDetails_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CapturePayload_TargetDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CapturePayload_TargetDetails::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prey_piece_id_),
           0,
           offsetof(Impl_, hunter_src_cell_) -
               offsetof(Impl_, prey_piece_id_) +
               sizeof(Impl_::hunter_src_cell_));
}
CapturePayload_TargetDetails::~CapturePayload_TargetDetails() {
  // @@protoc_insertion_point(destructor:chk.payload.CapturePayload.TargetDetails)
  SharedDtor(*this);
}
inline void CapturePayload_TargetDetails::SharedDtor(MessageLite& self) {
  CapturePayload_TargetDetails& this_ = static_cast<CapturePayload_TargetDetails&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CapturePayload_TargetDetails::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CapturePayload_TargetDetails(arena);
}
constexpr auto CapturePayload_TargetDetails::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CapturePayload_TargetDetails),
                                            alignof(CapturePayload_TargetDetails));
}
constexpr auto CapturePayload_TargetDetails::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CapturePayload_TargetDetails_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CapturePayload_TargetDetails::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CapturePayload_TargetDetails>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CapturePayload_TargetDetails::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CapturePayload_TargetDetails>(), &CapturePayload_TargetDetails::ByteSizeLong,
              &CapturePayload_TargetDetails::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_._cached_size_),
          false,
      },
      &CapturePayload_TargetDetails::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CapturePayload_TargetDetails_class_data_ =
            CapturePayload_TargetDetails::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CapturePayload_TargetDetails::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CapturePayload_TargetDetails_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CapturePayload_TargetDetails_class_data_.tc_table);
  return CapturePayload_TargetDetails_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CapturePayload_TargetDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CapturePayload_TargetDetails_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::CapturePayload_TargetDetails>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 prey_piece_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_TargetDetails, _impl_.prey_piece_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_piece_id_)}},
    // int32 prey_cell_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_TargetDetails, _impl_.prey_cell_idx_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_cell_idx_)}},
    // int32 hunter_src_cell = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_TargetDetails, _impl_.hunter_src_cell_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.hunter_src_cell_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 prey_piece_id = 1;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_piece_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 prey_cell_idx = 2;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_cell_idx_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 hunter_src_cell = 3;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.hunter_src_cell_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CapturePayload_TargetDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.CapturePayload.TargetDetails)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.prey_piece_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hunter_src_cell_) -
        reinterpret_cast<char*>(&_impl_.prey_piece_id_)) + sizeof(_impl_.hunter_src_cell_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CapturePayload_TargetDetails::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CapturePayload_TargetDetails& this_ = static_cast<const CapturePayload_TargetDetails&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CapturePayload_TargetDetails::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CapturePayload_TargetDetails& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.CapturePayload.TargetDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 prey_piece_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_prey_piece_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_prey_piece_id(), target);
    }
  }

  // int32 prey_cell_idx = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_prey_cell_idx() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_prey_cell_idx(), target);
    }
  }

  // int32 hunter_src_cell = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_hunter_src_cell() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_hunter_src_cell(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.CapturePayload.TargetDetails)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CapturePayload_TargetDetails::ByteSizeLong(const MessageLite& base) {
  const CapturePayload_TargetDetails& this_ = static_cast<const CapturePayload_TargetDetails&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CapturePayload_TargetDetails::ByteSizeLong() const {
  const CapturePayload_TargetDetails& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.CapturePayload.TargetDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // int32 prey_piece_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_prey_piece_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_prey_piece_id());
      }
    }
    // int32 prey_cell_idx = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_prey_cell_idx() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_prey_cell_idx());
      }
    }
    // int32 hunter_src_cell = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_hunter_src_cell() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_hunter_src_cell());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CapturePayload_TargetDetails::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CapturePayload_TargetDetails*>(&to_msg);
  auto& from = static_cast<const CapturePayload_TargetDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.CapturePayload.TargetDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_prey_piece_id() != 0) {
        _this->_impl_.prey_piece_id_ = from._impl_.prey_piece_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_prey_cell_idx() != 0) {
        _this->_impl_.prey_cell_idx_ = from._impl_.prey_cell_idx_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_hunter_src_cell() != 0) {
        _this->_impl_.hunter_src_cell_ = from._impl_.hunter_src_cell_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapturePayload_TargetDetails::CopyFrom(const CapturePayload_TargetDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.CapturePayload.TargetDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CapturePayload_TargetDetails::InternalSwap(CapturePayload_TargetDetails* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.hunter_src_cell_)
      + sizeof(CapturePayload_TargetDetails::_impl_.hunter_src_cell_)
      - PROTOBUF_FIELD_OFFSET(CapturePayload_TargetDetails, _impl_.prey_piece_id_)>(
          reinterpret_cast<char*>(&_impl_.prey_piece_id_),
          reinterpret_cast<char*>(&other->_impl_.prey_piece_id_));
}

::google::protobuf::Metadata CapturePayload_TargetDetails::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CapturePayload_HunterDestination::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CapturePayload_HunterDestination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_._has_bits_);
};

CapturePayload_HunterDestination::CapturePayload_HunterDestination(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CapturePayload_HunterDestination_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.CapturePayload.HunterDestination)
}
CapturePayload_HunterDestination::CapturePayload_HunterDestination(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CapturePayload_HunterDestination& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CapturePayload_HunterDestination_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CapturePayload_HunterDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CapturePayload_HunterDestination::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cell_index_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, cell_index_) +
               sizeof(Impl_::y_));
}
CapturePayload_HunterDestination::~CapturePayload_HunterDestination() {
  // @@protoc_insertion_point(destructor:chk.payload.CapturePayload.HunterDestination)
  SharedDtor(*this);
}
inline void CapturePayload_HunterDestination::SharedDtor(MessageLite& self) {
  CapturePayload_HunterDestination& this_ = static_cast<CapturePayload_HunterDestination&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CapturePayload_HunterDestination::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CapturePayload_HunterDestination(arena);
}
constexpr auto CapturePayload_HunterDestination::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CapturePayload_HunterDestination),
                                            alignof(CapturePayload_HunterDestination));
}
constexpr auto CapturePayload_HunterDestination::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CapturePayload_HunterDestination_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CapturePayload_HunterDestination::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CapturePayload_HunterDestination>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CapturePayload_HunterDestination::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CapturePayload_HunterDestination>(), &CapturePayload_HunterDestination::ByteSizeLong,
              &CapturePayload_HunterDestination::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_._cached_size_),
          false,
      },
      &CapturePayload_HunterDestination::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CapturePayload_HunterDestination_class_data_ =
            CapturePayload_HunterDestination::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CapturePayload_HunterDestination::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CapturePayload_HunterDestination_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CapturePayload_HunterDestination_class_data_.tc_table);
  return CapturePayload_HunterDestination_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CapturePayload_HunterDestination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CapturePayload_HunterDestination_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::CapturePayload_HunterDestination>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 cell_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload_HunterDestination, _impl_.cell_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.cell_index_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 cell_index = 1;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.cell_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.x_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.y_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CapturePayload_HunterDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.CapturePayload.HunterDestination)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.cell_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.cell_index_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CapturePayload_HunterDestination::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CapturePayload_HunterDestination& this_ = static_cast<const CapturePayload_HunterDestination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CapturePayload_HunterDestination::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CapturePayload_HunterDestination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.CapturePayload.HunterDestination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 cell_index = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_cell_index() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_cell_index(), target);
    }
  }

  // float x = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_x(), target);
    }
  }

  // float y = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_y(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.CapturePayload.HunterDestination)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CapturePayload_HunterDestination::ByteSizeLong(const MessageLite& base) {
  const CapturePayload_HunterDestination& this_ = static_cast<const CapturePayload_HunterDestination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CapturePayload_HunterDestination::ByteSizeLong() const {
  const CapturePayload_HunterDestination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.CapturePayload.HunterDestination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // int32 cell_index = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_cell_index() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_cell_index());
      }
    }
    // float x = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
        total_size += 5;
      }
    }
    // float y = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CapturePayload_HunterDestination::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CapturePayload_HunterDestination*>(&to_msg);
  auto& from = static_cast<const CapturePayload_HunterDestination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.CapturePayload.HunterDestination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_cell_index() != 0) {
        _this->_impl_.cell_index_ = from._impl_.cell_index_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapturePayload_HunterDestination::CopyFrom(const CapturePayload_HunterDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.CapturePayload.HunterDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CapturePayload_HunterDestination::InternalSwap(CapturePayload_HunterDestination* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.y_)
      + sizeof(CapturePayload_HunterDestination::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(CapturePayload_HunterDestination, _impl_.cell_index_)>(
          reinterpret_cast<char*>(&_impl_.cell_index_),
          reinterpret_cast<char*>(&other->_impl_.cell_index_));
}

::google::protobuf::Metadata CapturePayload_HunterDestination::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CapturePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CapturePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_._has_bits_);
};

CapturePayload::CapturePayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CapturePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.CapturePayload)
}
PROTOBUF_NDEBUG_INLINE CapturePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chk::payload::CapturePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CapturePayload::CapturePayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CapturePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CapturePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CapturePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.details_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.details_)
                : nullptr;
  _impl_.destination_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.destination_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_team_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, from_team_),
           offsetof(Impl_, hunter_piece_id_) -
               offsetof(Impl_, from_team_) +
               sizeof(Impl_::hunter_piece_id_));

  // @@protoc_insertion_point(copy_constructor:chk.payload.CapturePayload)
}
PROTOBUF_NDEBUG_INLINE CapturePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CapturePayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, details_),
           0,
           offsetof(Impl_, hunter_piece_id_) -
               offsetof(Impl_, details_) +
               sizeof(Impl_::hunter_piece_id_));
}
CapturePayload::~CapturePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.CapturePayload)
  SharedDtor(*this);
}
inline void CapturePayload::SharedDtor(MessageLite& self) {
  CapturePayload& this_ = static_cast<CapturePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.details_;
  delete this_._impl_.destination_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CapturePayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CapturePayload(arena);
}
constexpr auto CapturePayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CapturePayload),
                                            alignof(CapturePayload));
}
constexpr auto CapturePayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CapturePayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CapturePayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CapturePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CapturePayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CapturePayload>(), &CapturePayload::ByteSizeLong,
              &CapturePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_._cached_size_),
          false,
      },
      &CapturePayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CapturePayload_class_data_ =
            CapturePayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CapturePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CapturePayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CapturePayload_class_data_.tc_table);
  return CapturePayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 0, 2>
CapturePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967268,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CapturePayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::CapturePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .chk.payload.TeamColor from_team = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload, _impl_.from_team_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.from_team_)}},
    // int32 hunter_piece_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CapturePayload, _impl_.hunter_piece_id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.hunter_piece_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .chk.payload.CapturePayload.TargetDetails details = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.details_)}},
    // .chk.payload.CapturePayload.HunterDestination destination = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.destination_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor from_team = 1;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.from_team_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 hunter_piece_id = 2;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.hunter_piece_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .chk.payload.CapturePayload.TargetDetails details = 4;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.details_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chk.payload.CapturePayload.HunterDestination destination = 5;
    {PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.destination_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::chk::payload::CapturePayload_TargetDetails>()},
      {::_pbi::TcParser::GetTable<::chk::payload::CapturePayload_HunterDestination>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CapturePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.CapturePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.details_ != nullptr);
      _impl_.details_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.destination_ != nullptr);
      _impl_.destination_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.from_team_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hunter_piece_id_) -
        reinterpret_cast<char*>(&_impl_.from_team_)) + sizeof(_impl_.hunter_piece_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CapturePayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CapturePayload& this_ = static_cast<const CapturePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CapturePayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CapturePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.CapturePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor from_team = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_from_team() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_from_team(), target);
    }
  }

  // int32 hunter_piece_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_hunter_piece_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_hunter_piece_id(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .chk.payload.CapturePayload.TargetDetails details = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.details_, this_._impl_.details_->GetCachedSize(), target,
        stream);
  }

  // .chk.payload.CapturePayload.HunterDestination destination = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.destination_, this_._impl_.destination_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.CapturePayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CapturePayload::ByteSizeLong(const MessageLite& base) {
  const CapturePayload& this_ = static_cast<const CapturePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CapturePayload::ByteSizeLong() const {
  const CapturePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.CapturePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .chk.payload.CapturePayload.TargetDetails details = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.details_);
    }
    // .chk.payload.CapturePayload.HunterDestination destination = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.destination_);
    }
    // .chk.payload.TeamColor from_team = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_from_team() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_from_team());
      }
    }
    // int32 hunter_piece_id = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_hunter_piece_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_hunter_piece_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CapturePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CapturePayload*>(&to_msg);
  auto& from = static_cast<const CapturePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.CapturePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.details_ != nullptr);
      if (_this->_impl_.details_ == nullptr) {
        _this->_impl_.details_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.details_);
      } else {
        _this->_impl_.details_->MergeFrom(*from._impl_.details_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.destination_ != nullptr);
      if (_this->_impl_.destination_ == nullptr) {
        _this->_impl_.destination_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.destination_);
      } else {
        _this->_impl_.destination_->MergeFrom(*from._impl_.destination_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_from_team() != 0) {
        _this->_impl_.from_team_ = from._impl_.from_team_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_hunter_piece_id() != 0) {
        _this->_impl_.hunter_piece_id_ = from._impl_.hunter_piece_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapturePayload::CopyFrom(const CapturePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.CapturePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CapturePayload::InternalSwap(CapturePayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.hunter_piece_id_)
      + sizeof(CapturePayload::_impl_.hunter_piece_id_)
      - PROTOBUF_FIELD_OFFSET(CapturePayload, _impl_.details_)>(
          reinterpret_cast<char*>(&_impl_.details_),
          reinterpret_cast<char*>(&other->_impl_.details_));
}

::google::protobuf::Metadata CapturePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WinLosePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WinLosePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WinLosePayload, _impl_._has_bits_);
};

WinLosePayload::WinLosePayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WinLosePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chk.payload.WinLosePayload)
}
WinLosePayload::WinLosePayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WinLosePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WinLosePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE WinLosePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WinLosePayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winner_ = {};
}
WinLosePayload::~WinLosePayload() {
  // @@protoc_insertion_point(destructor:chk.payload.WinLosePayload)
  SharedDtor(*this);
}
inline void WinLosePayload::SharedDtor(MessageLite& self) {
  WinLosePayload& this_ = static_cast<WinLosePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WinLosePayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WinLosePayload(arena);
}
constexpr auto WinLosePayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WinLosePayload),
                                            alignof(WinLosePayload));
}
constexpr auto WinLosePayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WinLosePayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WinLosePayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WinLosePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WinLosePayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WinLosePayload>(), &WinLosePayload::ByteSizeLong,
              &WinLosePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WinLosePayload, _impl_._cached_size_),
          false,
      },
      &WinLosePayload::kDescriptorMethods,
      &descriptor_table_base_5fpayload_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WinLosePayload_class_data_ =
            WinLosePayload::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WinLosePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WinLosePayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WinLosePayload_class_data_.tc_table);
  return WinLosePayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
WinLosePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WinLosePayload, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WinLosePayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chk::payload::WinLosePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chk.payload.TeamColor winner = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WinLosePayload, _impl_.winner_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WinLosePayload, _impl_.winner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chk.payload.TeamColor winner = 1;
    {PROTOBUF_FIELD_OFFSET(WinLosePayload, _impl_.winner_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WinLosePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chk.payload.WinLosePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.winner_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WinLosePayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WinLosePayload& this_ = static_cast<const WinLosePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WinLosePayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WinLosePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chk.payload.WinLosePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chk.payload.TeamColor winner = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_winner() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_winner(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chk.payload.WinLosePayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WinLosePayload::ByteSizeLong(const MessageLite& base) {
  const WinLosePayload& this_ = static_cast<const WinLosePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WinLosePayload::ByteSizeLong() const {
  const WinLosePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chk.payload.WinLosePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .chk.payload.TeamColor winner = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_winner() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_winner());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WinLosePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WinLosePayload*>(&to_msg);
  auto& from = static_cast<const WinLosePayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chk.payload.WinLosePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_winner() != 0) {
      _this->_impl_.winner_ = from._impl_.winner_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WinLosePayload::CopyFrom(const WinLosePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chk.payload.WinLosePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WinLosePayload::InternalSwap(WinLosePayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winner_, other->_impl_.winner_);
}

::google::protobuf::Metadata WinLosePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace payload
}  // namespace chk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_base_5fpayload_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
// clang-format on